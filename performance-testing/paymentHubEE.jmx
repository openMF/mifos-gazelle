<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan">
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
        <collectionProp name="Arguments.arguments">
          <elementProp name="host" elementType="Argument">
            <stringProp name="Argument.name">host</stringProp>
            <stringProp name="Argument.value">paymentHub</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="scheme" elementType="Argument">
            <stringProp name="Argument.name">scheme</stringProp>
            <stringProp name="Argument.value">https</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <stringProp name="HTTPSampler.domain">paymentHub</stringProp>
        <stringProp name="HTTPSampler.protocol">https</stringProp>
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.implementation"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">false</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Operations App APIs">
        <intProp name="ThreadGroup.num_threads">10</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <RecordingController guiclass="RecordController" testclass="RecordingController" testname="Recording Controller" enabled="true"/>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Authorization" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Authorization-1" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">ops-bk.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/oauth/token?username=mifos&amp;password=password&amp;grant_type=password</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Basic Y2xpZW50Og==</stringProp>
                  </elementProp>
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">rhino</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">64f5174b-5fab-499d-a23b-fb24f6538ff1</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">text/plain</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Authorization-2" enabled="false">
              <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
              <stringProp name="HTTPSampler.domain">ops-bk.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/oauth/token?username=mifos&amp;password=password&amp;grant_type=password</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Basic Y2xpZW50Og==</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://ops-bk.local/oauth/token?username=mifos&amp;password=password&amp;grant_type=password</stringProp>
                  </elementProp>
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">rhino</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">64f5174b-5fab-499d-a23b-fb24f6538ff1</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">text/plain</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Filter Transaction Request" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Filter Transaction Request-3" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">ops-bk.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/v1/transactionRequests?startTo=2022-08-19%2016:16:33&amp;command=export</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;errorDescription&quot;: [&quot;Ams local is disabled&quot;],&#xd;
    &quot;transactionId&quot;: [],&#xd;
    &quot;payerId&quot;: [],&#xd;
    &quot;payeeId&quot;: [],&#xd;
    &quot;externalId&quot;: [],&#xd;
    &quot;workflowInstanceKey&quot;: [],&#xd;
    &quot;state&quot;: []&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiaWRlbnRpdHktcHJvdmlkZXIiLCJyaGlubyJdLCJ1c2VyX25hbWUiOiJtaWZvcyIsInNjb3BlIjpbImlkZW50aXR5Il0sImV4cCI6MTcyNTUyOTYzMCwiYXV0aG9yaXRpZXMiOlsiUkVGVU5EIiwiQUxMX0ZVTkNUSU9OUyJdLCJqdGkiOiJZckJlQlNJRTVLQ1hkTDdsbkZ6Z1dNVExNTDQ9IiwiY2xpZW50X2lkIjoiY2xpZW50In0.z3G3AnlXIFanzVa22w1fjWhIn0DYkhYmJqsy0WbhQI2xsoLqWcai15pkJQaaY5m0QfR_Rp-tmc9vRiX9i93kdSs20gTTnwmQVSwJviQJ67k_PU2CgFDkVMSBwib-LSmj1MNdSzYYBisD6Ix3_suWX5zzNNBfqEOZpUpQOQhDgJSvXGYJ7cCRw0fWRHITTCq7hM0mfbC4Ojg67Ku_RXycYCvrXp65w1wdPBK5MrAS3ynbP63IABivnPLPtrgB1VJx10V2g524hyuLoEAyUnzhHK1PBPuV_AmFY0dsbe_7q460xTt6K30D34cJ6L1E7dlhxjnCF2Rli07QyKB5L0P2Zg</stringProp>
                  </elementProp>
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">rhino</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">087ceaf4-1f15-42c7-834c-27ab91986823</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Filter Transaction Request-4" enabled="false">
              <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
              <stringProp name="HTTPSampler.domain">ops-bk.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/v1/transactionRequests?startTo=2022-08-19%2016:16:33&amp;command=export</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;errorDescription&quot;: [&quot;Ams local is disabled&quot;],&#xd;
    &quot;transactionId&quot;: [],&#xd;
    &quot;payerId&quot;: [],&#xd;
    &quot;payeeId&quot;: [],&#xd;
    &quot;externalId&quot;: [],&#xd;
    &quot;workflowInstanceKey&quot;: [],&#xd;
    &quot;state&quot;: []&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiaWRlbnRpdHktcHJvdmlkZXIiLCJyaGlubyJdLCJ1c2VyX25hbWUiOiJtaWZvcyIsInNjb3BlIjpbImlkZW50aXR5Il0sImV4cCI6MTcyNTUyOTYzMCwiYXV0aG9yaXRpZXMiOlsiUkVGVU5EIiwiQUxMX0ZVTkNUSU9OUyJdLCJqdGkiOiJZckJlQlNJRTVLQ1hkTDdsbkZ6Z1dNVExNTDQ9IiwiY2xpZW50X2lkIjoiY2xpZW50In0.z3G3AnlXIFanzVa22w1fjWhIn0DYkhYmJqsy0WbhQI2xsoLqWcai15pkJQaaY5m0QfR_Rp-tmc9vRiX9i93kdSs20gTTnwmQVSwJviQJ67k_PU2CgFDkVMSBwib-LSmj1MNdSzYYBisD6Ix3_suWX5zzNNBfqEOZpUpQOQhDgJSvXGYJ7cCRw0fWRHITTCq7hM0mfbC4Ojg67Ku_RXycYCvrXp65w1wdPBK5MrAS3ynbP63IABivnPLPtrgB1VJx10V2g524hyuLoEAyUnzhHK1PBPuV_AmFY0dsbe_7q460xTt6K30D34cJ6L1E7dlhxjnCF2Rli07QyKB5L0P2Zg</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://ops-bk.local/api/v1/transactionRequests?startTo=2022-08-19%2016:16:33&amp;command=export</stringProp>
                  </elementProp>
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">rhino</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">087ceaf4-1f15-42c7-834c-27ab91986823</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Get all error codes" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get all error codes-5" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">ops-bk.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/v1/errorcode/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">rhino</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">6a57c364-3892-4aff-86e4-73dbef597ce1</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get all error codes-6" enabled="false">
              <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
              <stringProp name="HTTPSampler.domain">ops-bk.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/v1/errorcode</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://ops-bk.local/api/v1/errorcode/</stringProp>
                  </elementProp>
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">rhino</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">6a57c364-3892-4aff-86e4-73dbef597ce1</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Get error code by id" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get error code by id-7" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">ops-bk.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/v1/errorcode/1</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">rhino</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">f2b3e3a6-428e-4092-8e7c-f2dbd7821af7</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get error code by id-8" enabled="false">
              <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
              <stringProp name="HTTPSampler.domain">ops-bk.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/v1/errorcode/1</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://ops-bk.local/api/v1/errorcode/1</stringProp>
                  </elementProp>
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">rhino</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">f2b3e3a6-428e-4092-8e7c-f2dbd7821af7</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Filter error code by id" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Filter error code by id-9" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">ops-bk.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/v1/errorcode/1</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">rhino</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">1a709d97-359c-4d4c-ba79-7151bf26c868</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Filter error code by id-10" enabled="false">
              <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
              <stringProp name="HTTPSampler.domain">ops-bk.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/v1/errorcode/1</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://ops-bk.local/api/v1/errorcode/1</stringProp>
                  </elementProp>
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">rhino</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">1a709d97-359c-4d4c-ba79-7151bf26c868</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Filter error code" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Filter error code-11" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">ops-bk.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/v1/errorcode/filter</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="value" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">value</stringProp>
                    <stringProp name="Argument.value">1037</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="by" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">by</stringProp>
                    <stringProp name="Argument.value">errorCode</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">rhino</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">fcd3c26a-0973-4be2-b04d-02103eb9ebe1</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Filter error code-12" enabled="false">
              <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
              <stringProp name="HTTPSampler.domain">ops-bk.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/v1/errorcode/filter</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="value" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">value</stringProp>
                    <stringProp name="Argument.value">1037</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="by" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">by</stringProp>
                    <stringProp name="Argument.value">errorCode</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://ops-bk.local/api/v1/errorcode/filter?value=1037&amp;by=errorCode</stringProp>
                  </elementProp>
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">rhino</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">fcd3c26a-0973-4be2-b04d-02103eb9ebe1</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Add error codes" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add error codes-13" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">ops-bk.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/v1/errorcode/filter</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="value" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">value</stringProp>
                    <stringProp name="Argument.value">1037</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="by" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">by</stringProp>
                    <stringProp name="Argument.value">errorCode</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">rhino</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">4dc9af4e-f717-445f-8f27-12db9e693a9a</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add error codes-14" enabled="false">
              <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
              <stringProp name="HTTPSampler.domain">ops-bk.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/v1/errorcode/filter</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="value" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">value</stringProp>
                    <stringProp name="Argument.value">1037</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="by" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">by</stringProp>
                    <stringProp name="Argument.value">errorCode</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://ops-bk.local/api/v1/errorcode/filter?value=1037&amp;by=errorCode</stringProp>
                  </elementProp>
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">rhino</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">4dc9af4e-f717-445f-8f27-12db9e693a9a</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add error codes-15" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">ops-bk.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/v1/errorcode/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;transactionType&quot;: &quot;COLLECTION-MPESA&quot;,&#xd;
    &quot;errorMessage&quot;: &quot;Request cancelled by user&quot;,&#xd;
    &quot;errorCode&quot;: &quot;1031&quot;,&#xd;
    &quot;recoverable&quot;: false&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">rhino</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">4453fd03-10a1-4484-833c-7751115c5844</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add error codes-16" enabled="false">
              <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
              <stringProp name="HTTPSampler.domain">ops-bk.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/v1/errorcode</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;transactionType&quot;: &quot;COLLECTION-MPESA&quot;,&#xd;
    &quot;errorMessage&quot;: &quot;Request cancelled by user&quot;,&#xd;
    &quot;errorCode&quot;: &quot;1031&quot;,&#xd;
    &quot;recoverable&quot;: false&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://ops-bk.local/api/v1/errorcode/</stringProp>
                  </elementProp>
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">rhino</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">4453fd03-10a1-4484-833c-7751115c5844</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Trensfers" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Trensfers-17" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">ops-bk.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/v1/errorcode/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;transactionType&quot;: &quot;COLLECTION-MPESA&quot;,&#xd;
    &quot;errorMessage&quot;: &quot;Request cancelled by user&quot;,&#xd;
    &quot;errorCode&quot;: &quot;1031&quot;,&#xd;
    &quot;recoverable&quot;: false&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">rhino</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">e9db834a-12fe-4fe0-beb4-0eb5ddb70eb9</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Trensfers-18" enabled="false">
              <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
              <stringProp name="HTTPSampler.domain">ops-bk.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/v1/errorcode</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;transactionType&quot;: &quot;COLLECTION-MPESA&quot;,&#xd;
    &quot;errorMessage&quot;: &quot;Request cancelled by user&quot;,&#xd;
    &quot;errorCode&quot;: &quot;1031&quot;,&#xd;
    &quot;recoverable&quot;: false&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://ops-bk.local/api/v1/errorcode/</stringProp>
                  </elementProp>
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">rhino</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">e9db834a-12fe-4fe0-beb4-0eb5ddb70eb9</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Trensfers" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Trensfers-19" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">ops-bk.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/v1/transfers</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="size" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">size</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="page" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">page</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="clientCorrelationId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">clientCorrelationId</stringProp>
                    <stringProp name="Argument.value">123456789</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiaWRlbnRpdHktcHJvdmlkZXIiLCJyaGlubyJdLCJ1c2VyX25hbWUiOiJtaWZvcyIsInNjb3BlIjpbImlkZW50aXR5Il0sImV4cCI6MTcyNTUyOTYzMCwiYXV0aG9yaXRpZXMiOlsiUkVGVU5EIiwiQUxMX0ZVTkNUSU9OUyJdLCJqdGkiOiJZckJlQlNJRTVLQ1hkTDdsbkZ6Z1dNVExNTDQ9IiwiY2xpZW50X2lkIjoiY2xpZW50In0.z3G3AnlXIFanzVa22w1fjWhIn0DYkhYmJqsy0WbhQI2xsoLqWcai15pkJQaaY5m0QfR_Rp-tmc9vRiX9i93kdSs20gTTnwmQVSwJviQJ67k_PU2CgFDkVMSBwib-LSmj1MNdSzYYBisD6Ix3_suWX5zzNNBfqEOZpUpQOQhDgJSvXGYJ7cCRw0fWRHITTCq7hM0mfbC4Ojg67Ku_RXycYCvrXp65w1wdPBK5MrAS3ynbP63IABivnPLPtrgB1VJx10V2g524hyuLoEAyUnzhHK1PBPuV_AmFY0dsbe_7q460xTt6K30D34cJ6L1E7dlhxjnCF2Rli07QyKB5L0P2Zg</stringProp>
                  </elementProp>
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">rhino</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">d73a6b66-a7cc-447c-b478-83c6791c1f83</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Trensfers-20" enabled="false">
              <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
              <stringProp name="HTTPSampler.domain">ops-bk.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/v1/transfers</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="size" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">size</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="page" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">page</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="clientCorrelationId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">clientCorrelationId</stringProp>
                    <stringProp name="Argument.value">123456789</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiaWRlbnRpdHktcHJvdmlkZXIiLCJyaGlubyJdLCJ1c2VyX25hbWUiOiJtaWZvcyIsInNjb3BlIjpbImlkZW50aXR5Il0sImV4cCI6MTcyNTUyOTYzMCwiYXV0aG9yaXRpZXMiOlsiUkVGVU5EIiwiQUxMX0ZVTkNUSU9OUyJdLCJqdGkiOiJZckJlQlNJRTVLQ1hkTDdsbkZ6Z1dNVExNTDQ9IiwiY2xpZW50X2lkIjoiY2xpZW50In0.z3G3AnlXIFanzVa22w1fjWhIn0DYkhYmJqsy0WbhQI2xsoLqWcai15pkJQaaY5m0QfR_Rp-tmc9vRiX9i93kdSs20gTTnwmQVSwJviQJ67k_PU2CgFDkVMSBwib-LSmj1MNdSzYYBisD6Ix3_suWX5zzNNBfqEOZpUpQOQhDgJSvXGYJ7cCRw0fWRHITTCq7hM0mfbC4Ojg67Ku_RXycYCvrXp65w1wdPBK5MrAS3ynbP63IABivnPLPtrgB1VJx10V2g524hyuLoEAyUnzhHK1PBPuV_AmFY0dsbe_7q460xTt6K30D34cJ6L1E7dlhxjnCF2Rli07QyKB5L0P2Zg</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://ops-bk.local/api/v1/transfers?size=1&amp;page=0&amp;clientCorrelationId=123456789</stringProp>
                  </elementProp>
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">rhino</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">d73a6b66-a7cc-447c-b478-83c6791c1f83</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Variables" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Variables-21" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">ops-bk.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/v1/variables/21037e77-7227-4757-8e45-5c356f369b11</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">rhino</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">d6fceca4-c565-4ee5-90ea-93e807914409</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Variables-22" enabled="false">
              <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
              <stringProp name="HTTPSampler.domain">ops-bk.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/v1/variables/21037e77-7227-4757-8e45-5c356f369b11</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://ops-bk.local/api/v1/variables/21037e77-7227-4757-8e45-5c356f369b11</stringProp>
                  </elementProp>
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">rhino</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">d6fceca4-c565-4ee5-90ea-93e807914409</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Get Transaction Request" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Transaction Request-23" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">ops-bk.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/v1/transactionRequests/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="clientCorrelationId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">clientCorrelationId</stringProp>
                    <stringProp name="Argument.value">123</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiaWRlbnRpdHktcHJvdmlkZXIiLCJyaGlubyJdLCJ1c2VyX25hbWUiOiJtaWZvcyIsInNjb3BlIjpbImlkZW50aXR5Il0sImV4cCI6MTcyNTUyOTYzMCwiYXV0aG9yaXRpZXMiOlsiUkVGVU5EIiwiQUxMX0ZVTkNUSU9OUyJdLCJqdGkiOiJZckJlQlNJRTVLQ1hkTDdsbkZ6Z1dNVExNTDQ9IiwiY2xpZW50X2lkIjoiY2xpZW50In0.z3G3AnlXIFanzVa22w1fjWhIn0DYkhYmJqsy0WbhQI2xsoLqWcai15pkJQaaY5m0QfR_Rp-tmc9vRiX9i93kdSs20gTTnwmQVSwJviQJ67k_PU2CgFDkVMSBwib-LSmj1MNdSzYYBisD6Ix3_suWX5zzNNBfqEOZpUpQOQhDgJSvXGYJ7cCRw0fWRHITTCq7hM0mfbC4Ojg67Ku_RXycYCvrXp65w1wdPBK5MrAS3ynbP63IABivnPLPtrgB1VJx10V2g524hyuLoEAyUnzhHK1PBPuV_AmFY0dsbe_7q460xTt6K30D34cJ6L1E7dlhxjnCF2Rli07QyKB5L0P2Zg</stringProp>
                  </elementProp>
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">rhino</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">34b61ecf-3dac-49f2-9dcd-3b001c0f5038</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Transaction Request-24" enabled="false">
              <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
              <stringProp name="HTTPSampler.domain">ops-bk.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/v1/transactionRequests/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="clientCorrelationId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">clientCorrelationId</stringProp>
                    <stringProp name="Argument.value">123</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiaWRlbnRpdHktcHJvdmlkZXIiLCJyaGlubyJdLCJ1c2VyX25hbWUiOiJtaWZvcyIsInNjb3BlIjpbImlkZW50aXR5Il0sImV4cCI6MTcyNTUyOTYzMCwiYXV0aG9yaXRpZXMiOlsiUkVGVU5EIiwiQUxMX0ZVTkNUSU9OUyJdLCJqdGkiOiJZckJlQlNJRTVLQ1hkTDdsbkZ6Z1dNVExNTDQ9IiwiY2xpZW50X2lkIjoiY2xpZW50In0.z3G3AnlXIFanzVa22w1fjWhIn0DYkhYmJqsy0WbhQI2xsoLqWcai15pkJQaaY5m0QfR_Rp-tmc9vRiX9i93kdSs20gTTnwmQVSwJviQJ67k_PU2CgFDkVMSBwib-LSmj1MNdSzYYBisD6Ix3_suWX5zzNNBfqEOZpUpQOQhDgJSvXGYJ7cCRw0fWRHITTCq7hM0mfbC4Ojg67Ku_RXycYCvrXp65w1wdPBK5MrAS3ynbP63IABivnPLPtrgB1VJx10V2g524hyuLoEAyUnzhHK1PBPuV_AmFY0dsbe_7q460xTt6K30D34cJ6L1E7dlhxjnCF2Rli07QyKB5L0P2Zg</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://ops-bk.local/api/v1/transactionRequests/?clientCorrelationId=123</stringProp>
                  </elementProp>
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">rhino</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">34b61ecf-3dac-49f2-9dcd-3b001c0f5038</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="X-sign" enabled="false">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <RecordingController guiclass="RecordController" testclass="RecordingController" testname="Recording Controller" enabled="true"/>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="generate token" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="generate token-2" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">ops-bk.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/v1/util/x-signature</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">[&#xd;
    {&#xd;
        &quot;creditParty&quot;: [&#xd;
            {&#xd;
                &quot;key&quot;: &quot;msisdn&quot;,&#xd;
                &quot;value&quot;: &quot;8837461856&quot;&#xd;
            }&#xd;
        ],&#xd;
        &quot;debitParty&quot;: [&#xd;
            {&#xd;
                &quot;key&quot;: &quot;accountnumber&quot;,&#xd;
                &quot;value&quot;: &quot;003001003874120160&quot;&#xd;
            }&#xd;
        ],&#xd;
        &quot;subType&quot;: &quot;SLCB&quot;,&#xd;
        &quot;amount&quot;: &quot;820.00&quot;,&#xd;
        &quot;currency&quot;: &quot;RWF&quot;,&#xd;
        &quot;descriptionText&quot;: &quot;Test Payment&quot;&#xd;
    },&#xd;
    {&#xd;
        &quot;creditParty&quot;: [&#xd;
            {&#xd;
                &quot;key&quot;: &quot;msisdn&quot;,&#xd;
                &quot;value&quot;: &quot;32131461856&quot;&#xd;
            }&#xd;
        ],&#xd;
        &quot;debitParty&quot;: [&#xd;
            {&#xd;
                &quot;key&quot;: &quot;accountnumber&quot;,&#xd;
                &quot;value&quot;: &quot;21314556003874120160&quot;&#xd;
            }&#xd;
        ],&#xd;
        &quot;subType&quot;: &quot;SLCB&quot;,&#xd;
        &quot;amount&quot;: &quot;20.00&quot;,&#xd;
        &quot;currency&quot;: &quot;RWF&quot;,&#xd;
        &quot;descriptionText&quot;: &quot;Test Payment&quot;&#xd;
    }&#xd;
]</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Purpose" elementType="Header">
                    <stringProp name="Header.name">Purpose</stringProp>
                    <stringProp name="Header.value">test payment</stringProp>
                  </elementProp>
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">rhino</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">993c99be-6f5c-4c4a-9f03-6326025c5537</stringProp>
                  </elementProp>
                  <elementProp name="type" elementType="Header">
                    <stringProp name="Header.name">type</stringProp>
                    <stringProp name="Header.value">raw</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="privateKey" elementType="Header">
                    <stringProp name="Header.name">privateKey</stringProp>
                    <stringProp name="Header.value">MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQC07fxdEQlsvWvggBgrork401cdyZ9MqV6FF/RgX6+Om23gP/rME5sE5//OoG61KU3dEj9phcHH845TuyNEyc4Vhqxe1gzl4VIZkOj+/2qxYvCsP1Sv3twTs+fDfFv5NA1ZXqiswTlgjR2Lpf1tevFQEOzB9WYvH/Bu9kgr2AlHMPV6+b7gcJij/7W1hndiCk2ahbi7oXjjODF4yEU9yNAhopibe4zzMX+FO4eFYpUmrjS5wvv6aAanfoeIMTwhF81Gj9V3rHf4UsD3VEx773q7GPuXlZSLyiNrUCdvxITh+dW8Y9ICuCTy3bFbp1/HzoPdzkkUlzPNKLlLiV2w4EcxAgMBAAECggEAMjqHfwbFyQxlMHQfQa3xIdd6LejVcqDqfqSB0Wd/A2YfAMyCQbmHpbsKh0B+u4h191OjixX5EBuLfa9MQUKNFejHXaSq+/6rnjFenbwm0IwZKJiEWDbUfhvJ0blqhypuMktXJG6YETfb5fL1AjnJWGL6d3Y7IgYJ56QzsQhOuxZidSqw468xc4sIF0CoTeJdrSC2yDCVuVlLNifm/2SXBJD8mgc1WCz0rkJhvvpW4k5G9rRSkS5f0013ZNfsfiDXoqiKkafoYNEbk7TZQNInqSuONm/UECn5GLm6IXdXSGfm1O2Lt0Kk7uxW/3W00mIPeZD+hiOObheRm/2HoOEKiQKBgQDreVFQihXAEDviIB2s6fphvPcMw/IonE8tX565i3303ubQMDIyZmsi3apN5pqSjm1TKq1KIgY2D4vYTu6vO5x9MhEO2CCZWNwC+awrIYa32FwiT8D8eZ9g+DJ4/IwXyz1fG38RCz/eIsJ0NsS9z8RKBIbfMmM+WnXRez3Fq+cbRwKBgQDEs35qXThbbFUYo1QkO0vIo85iczu9NllRxo1nAqQkfu1oTYQQobxcGk/aZk0B02r9kt2eob8zfG+X3LadIhQ0/LalnGNKI9jWLkdW4dxi7xMU99MYc3NRXmR49xGxgOVkLzKyGMisUvkTnE5v/S1nhu5uFr3JPkWcCScLOTjVxwKBgHNWsDq3+GFkUkC3pHF/BhJ7wbLyA5pavfmmnZOavO6FhB8zjFLdkdq5IuMXcl0ZAHm9LLZkJhCy2rfwKb+RflxgerR/rrAOM24Np4RU3q0MgEyaLhg85pFT4T0bzu8UsRH14O6TSQxgkEjmTsX+j9IFl56aCryPCKi8Kgy53/CfAoGAdV2kUFLPDb3WCJ1r1zKKRW1398ZKHtwO73xJYu1wg1Y40cNuyX23pj0M6IOh7zT24dZ/5ecc7tuQukw3qgprhDJFyQtHMzWwbBuw9WZO2blM6XX1vuEkLajkykihhggi12RSG3IuSqQ3ejwJkUi/jsYz/fwTwcAmSLQtV8UM5IECgYEAh4h1EkMx3NXzVFmLsb4QLMXw8+Rnn9oG+NGObldQ+nmknUPu7iz5kl9lTJy+jWtqHlHL8ZtV1cZZSZnFxX5WQH5/lcz/UD+GqWoSlWuTU34PPTJqLKSYgkoOJQDEZVMVphLySS9tuo+K/h10lRS1r9KDm3RZASa1JnnWopBZIz4=</stringProp>
                  </elementProp>
                  <elementProp name="X-CorrelationID" elementType="Header">
                    <stringProp name="Header.name">X-CorrelationID</stringProp>
                    <stringProp name="Header.value">1234</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">text/plain</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Account Management" enabled="false">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <RecordingController guiclass="RecordController" testclass="RecordingController" testname="Recording Controller" enabled="true"/>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Get account statement by identifier" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get account statement by identifier-1" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">channel.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/channel/accounts/%7B%7BIdentifierType%7D%7D/%7B%7BIdentifierId%7D%7D/statemententries</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">ibank-usa</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">f222bc29-58a5-46fd-9fe5-fe1dce0f6189</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.41.2</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get account statement by identifier-2" enabled="false">
              <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
              <stringProp name="HTTPSampler.domain">channel.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/channel/accounts/%7B%7BIdentifierType%7D%7D/%7B%7BIdentifierId%7D%7D/statemententries</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://channel.local/channel/accounts/%7B%7BIdentifierType%7D%7D/%7B%7BIdentifierId%7D%7D/statemententries</stringProp>
                  </elementProp>
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">ibank-usa</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">f222bc29-58a5-46fd-9fe5-fe1dce0f6189</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.41.2</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Account Balance" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Account Balance-3" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">channel.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/channel/accounts/%7B%7BIdentifierType%7D%7D/%7B%7BIdentifierId%7D%7D/balance</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">ibank-usa</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">4a43ef02-9568-45e4-bb42-f48c7b359d10</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.41.2</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Account Balance-4" enabled="false">
              <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
              <stringProp name="HTTPSampler.domain">channel.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/channel/accounts/%7B%7BIdentifierType%7D%7D/%7B%7BIdentifierId%7D%7D/balance</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://channel.local/channel/accounts/%7B%7BIdentifierType%7D%7D/%7B%7BIdentifierId%7D%7D/balance</stringProp>
                  </elementProp>
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">ibank-usa</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">4a43ef02-9568-45e4-bb42-f48c7b359d10</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.41.2</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Account Status" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Account Status-9" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">channel.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/channel/accounts/%7B%7BIdentifierType%7D%7D/%7B%7BIdentifierId%7D%7D/status</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">ibank-usa</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">fa6fdc8c-daac-4980-b3d7-a08ce17d6482</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.41.2</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Account Status-10" enabled="false">
              <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
              <stringProp name="HTTPSampler.domain">channel.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
              <stringProp name="HTTPSampler.path">/channel/accounts/%7B%7BIdentifierType%7D%7D/%7B%7BIdentifierId%7D%7D/status</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://channel.local/channel/accounts/%7B%7BIdentifierType%7D%7D/%7B%7BIdentifierId%7D%7D/status</stringProp>
                  </elementProp>
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">ibank-usa</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">fa6fdc8c-daac-4980-b3d7-a08ce17d6482</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.41.2</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Account Name" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Account Name-11" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">channel.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/channel/accounts/%7B%7BIdentifierType%7D%7D/%7B%7BIdentifierId%7D%7D/accountname</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">ibank-usa</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">d4db3d31-7ef6-481a-9ffc-572299ba2f28</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.41.2</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Account Name-12" enabled="false">
              <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
              <stringProp name="HTTPSampler.domain">channel.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/channel/accounts/%7B%7BIdentifierType%7D%7D/%7B%7BIdentifierId%7D%7D/accountname</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://channel.local/channel/accounts/%7B%7BIdentifierType%7D%7D/%7B%7BIdentifierId%7D%7D/accountname</stringProp>
                  </elementProp>
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">ibank-usa</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">d4db3d31-7ef6-481a-9ffc-572299ba2f28</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.41.2</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Account Transactions" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Account Transactions-13" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">channel.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/channel/accounts/%7B%7BIdentifierType%7D%7D/%7B%7BIdentifierId%7D%7D/transactions</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">ibank-usa</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">991aa334-6ad9-44b2-8660-82b517bbfa23</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.41.2</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Account Transactions-14" enabled="false">
              <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
              <stringProp name="HTTPSampler.domain">channel.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/channel/accounts/%7B%7BIdentifierType%7D%7D/%7B%7BIdentifierId%7D%7D/transactions</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://channel.local/channel/accounts/%7B%7BIdentifierType%7D%7D/%7B%7BIdentifierId%7D%7D/transactions</stringProp>
                  </elementProp>
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">ibank-usa</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">991aa334-6ad9-44b2-8660-82b517bbfa23</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.41.2</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Deposit Money Copy" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Deposit Money Copy-15" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">channel.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/channel/deposit</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;amount&quot;: &quot;304&quot;,&#xd;
    &quot;type&quot;: &quot;transfer&quot;,&#xd;
    &quot;creditParty&quot;: [&#xd;
        {&#xd;
            &quot;key&quot;: &quot;msisdn&quot;,&#xd;
            &quot;value&quot;: &quot;+919900878571&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;currency&quot;: &quot;USD&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">ibank-usa</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">2fb6a82b-2c90-489a-aaba-4baaa6cd50ce</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.41.2</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Deposit Money Copy-16" enabled="false">
              <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
              <stringProp name="HTTPSampler.domain">channel.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/channel/deposit</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;amount&quot;: &quot;304&quot;,&#xd;
    &quot;type&quot;: &quot;transfer&quot;,&#xd;
    &quot;creditParty&quot;: [&#xd;
        {&#xd;
            &quot;key&quot;: &quot;msisdn&quot;,&#xd;
            &quot;value&quot;: &quot;+919900878571&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;currency&quot;: &quot;USD&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://channel.local/channel/deposit</stringProp>
                  </elementProp>
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">ibank-usa</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">2fb6a82b-2c90-489a-aaba-4baaa6cd50ce</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.41.2</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Customer Management" enabled="false">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <RecordingController guiclass="RecordController" testclass="RecordingController" testname="Recording Controller"/>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Customer Set PIN" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Customer Set PIN-48" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">channel.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/channel/customers/%7B%7BIdentifierType%7D%7D/%7B%7BIdentifierId%7D%7D/cpin</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;existingPin&quot;: &quot;String&quot;,&#xd;
    &quot;pin&quot;: &quot;String&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">ibank-usa</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">362efaed-58f5-43f2-86f6-2497cb76eda8</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Customer Creation" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Customer Creation-49" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">channel.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/channel/customers</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;identifierType&quot;: &quot;String&quot;,&#xd;
    &quot;IdentifierId&quot;: &quot;String&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">ibank-usa</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">90f53257-cc9d-4cf7-bc61-26088f1a6b22</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Miscellaneous" enabled="false">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <RecordingController guiclass="RecordController" testclass="RecordingController" testname="Recording Controller" enabled="true"/>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Heartbeat" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Heartbeat-50" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">channel.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/channel/heartbeat</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">470ecb42-cdc3-4381-b0e5-52d0c803db0c</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Mojaloop APIs" enabled="false">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <RecordingController guiclass="RecordController" testclass="RecordingController" testname="Recording Controller" enabled="true"/>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Transfer Details" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Transfer Details-51" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">channel.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/channel/transfer/%7B%7BtransactionId%7D%7D</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">bc4060b4-71ef-4341-b606-24bf7cb10cc8</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Transfer" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Transfer-52" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">channel.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/channel/transfer</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;payer&quot;: {&#xd;
        &quot;partyIdInfo&quot;: {&#xd;
            &quot;partyIdType&quot;: &quot;MSISDN&quot;,&#xd;
            &quot;partyIdentifier&quot;: &quot;27710101999&quot;&#xd;
        }&#xd;
    },&#xd;
    &quot;payee&quot;: {&#xd;
        &quot;partyIdInfo&quot;: {&#xd;
            &quot;partyIdType&quot;: &quot;MSISDN&quot;,&#xd;
            &quot;partyIdentifier&quot;: &quot;27710102999&quot;&#xd;
        }&#xd;
    },&#xd;
    &quot;amount&quot;: {&#xd;
        &quot;amount&quot;: 230,&#xd;
        &quot;currency&quot;: &quot;TZS&quot;&#xd;
    }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">8a3bd981-96b7-44a9-8b2e-de5932b8e823</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Transfer Request" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Transfer Request-53" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">channel.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/channel/transactionRequest</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;payer&quot;: {&#xd;
        &quot;partyIdInfo&quot;: {&#xd;
            &quot;partyIdType&quot;: &quot;MSISDN&quot;,&#xd;
            &quot;partyIdentifier&quot;: &quot;27710203999&quot;&#xd;
        }&#xd;
    },&#xd;
    &quot;payee&quot;: {&#xd;
        &quot;partyIdInfo&quot;: {&#xd;
            &quot;partyIdType&quot;: &quot;MSISDN&quot;,&#xd;
            &quot;partyIdentifier&quot;: &quot;27710305999&quot;&#xd;
        }&#xd;
    },&#xd;
    &quot;amount&quot;: {&#xd;
        &quot;amount&quot;: 77,&#xd;
        &quot;currency&quot;: &quot;TZS&quot;&#xd;
    }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">4ef74e63-cfaa-4f34-9af7-3e32eba7ba6f</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Party Registration" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Party Registration-54" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">channel.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/channel/partyRegistration</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;accountId&quot;:&quot;9062b90de19b43989005&quot;,&#xd;
  &quot;idType&quot;: &quot;EMAIL&quot;,&#xd;
  &quot;idValue&quot;: &quot;test@test.hu&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">ff2e2956-7135-4769-850a-045905ac9526</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Channel APIs" enabled="false">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <RecordingController guiclass="RecordController" testclass="RecordingController" testname="Recording Controller" enabled="true"/>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Transfer Query" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Transfer Query-28" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">channel.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/channel/transfer/%7B%7BtransactionId%7D%7D</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">{{PlatformTenant}}</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">848e386d-7546-418b-8c23-87503c70e55e</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.41.2</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Transfer Query-29" enabled="false">
              <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
              <stringProp name="HTTPSampler.domain">channel.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/channel/transfer/%7B%7BtransactionId%7D%7D</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://channel.local/channel/transfer/%7B%7BtransactionId%7D%7D</stringProp>
                  </elementProp>
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">{{PlatformTenant}}</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">848e386d-7546-418b-8c23-87503c70e55e</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.41.2</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Transfer" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Transfer-30" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">channel.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/channel/transfer</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;payer&quot;: {&#xd;
        &quot;partyIdInfo&quot;: {&#xd;
            &quot;partyIdType&quot;: &quot;MSISDN&quot;,&#xd;
            &quot;partyIdentifier&quot;: &quot;27710101999&quot;&#xd;
        }&#xd;
    },&#xd;
    &quot;payee&quot;: {&#xd;
        &quot;partyIdInfo&quot;: {&#xd;
            &quot;partyIdType&quot;: &quot;MSISDN&quot;,&#xd;
            &quot;partyIdentifier&quot;: &quot;27710102999&quot;&#xd;
        }&#xd;
    },&#xd;
    &quot;amount&quot;: {&#xd;
        &quot;amount&quot;: 230,&#xd;
        &quot;currency&quot;: &quot;TZS&quot;&#xd;
    }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">{{PlatformTenant}}</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">9922539d-fc9a-4980-afe6-dd9bd1abc4db</stringProp>
                  </elementProp>
                  <elementProp name="X-PayeeDFSP-ID" elementType="Header">
                    <stringProp name="Header.name">X-PayeeDFSP-ID</stringProp>
                    <stringProp name="Header.value">{{payeeDFSPId}}</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.41.2</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Transfer-31" enabled="false">
              <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
              <stringProp name="HTTPSampler.domain">channel.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/channel/transfer</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;payer&quot;: {&#xd;
        &quot;partyIdInfo&quot;: {&#xd;
            &quot;partyIdType&quot;: &quot;MSISDN&quot;,&#xd;
            &quot;partyIdentifier&quot;: &quot;27710101999&quot;&#xd;
        }&#xd;
    },&#xd;
    &quot;payee&quot;: {&#xd;
        &quot;partyIdInfo&quot;: {&#xd;
            &quot;partyIdType&quot;: &quot;MSISDN&quot;,&#xd;
            &quot;partyIdentifier&quot;: &quot;27710102999&quot;&#xd;
        }&#xd;
    },&#xd;
    &quot;amount&quot;: {&#xd;
        &quot;amount&quot;: 230,&#xd;
        &quot;currency&quot;: &quot;TZS&quot;&#xd;
    }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://channel.local/channel/transfer</stringProp>
                  </elementProp>
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">{{PlatformTenant}}</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">9922539d-fc9a-4980-afe6-dd9bd1abc4db</stringProp>
                  </elementProp>
                  <elementProp name="X-PayeeDFSP-ID" elementType="Header">
                    <stringProp name="Header.name">X-PayeeDFSP-ID</stringProp>
                    <stringProp name="Header.value">{{payeeDFSPId}}</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.41.2</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Transfer Request" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Transfer Request-32" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">channel.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/channel/transactionRequest</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;payer&quot;: {&#xd;
        &quot;partyIdInfo&quot;: {&#xd;
            &quot;partyIdType&quot;: &quot;MSISDN&quot;,&#xd;
            &quot;partyIdentifier&quot;: &quot;27710203999&quot;&#xd;
        }&#xd;
    },&#xd;
    &quot;payee&quot;: {&#xd;
        &quot;partyIdInfo&quot;: {&#xd;
            &quot;partyIdType&quot;: &quot;MSISDN&quot;,&#xd;
            &quot;partyIdentifier&quot;: &quot;27710305999&quot;&#xd;
        }&#xd;
    },&#xd;
    &quot;amount&quot;: {&#xd;
        &quot;amount&quot;: 77,&#xd;
        &quot;currency&quot;: &quot;TZS&quot;&#xd;
    }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">c57fec8b-cbb4-4864-a8c2-b481c175a361</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.41.2</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Transfer Request-33" enabled="false">
              <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
              <stringProp name="HTTPSampler.domain">channel.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/channel/transactionRequest</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;payer&quot;: {&#xd;
        &quot;partyIdInfo&quot;: {&#xd;
            &quot;partyIdType&quot;: &quot;MSISDN&quot;,&#xd;
            &quot;partyIdentifier&quot;: &quot;27710203999&quot;&#xd;
        }&#xd;
    },&#xd;
    &quot;payee&quot;: {&#xd;
        &quot;partyIdInfo&quot;: {&#xd;
            &quot;partyIdType&quot;: &quot;MSISDN&quot;,&#xd;
            &quot;partyIdentifier&quot;: &quot;27710305999&quot;&#xd;
        }&#xd;
    },&#xd;
    &quot;amount&quot;: {&#xd;
        &quot;amount&quot;: 77,&#xd;
        &quot;currency&quot;: &quot;TZS&quot;&#xd;
    }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://channel.local/channel/transactionRequest</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">c57fec8b-cbb4-4864-a8c2-b481c175a361</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.41.2</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Party Registration" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Party Registration-34" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">channel.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/channel/partyRegistration</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;accountId&quot;:&quot;9062b90de19b43989005&quot;,&#xd;
  &quot;idType&quot;: &quot;EMAIL&quot;,&#xd;
  &quot;idValue&quot;: &quot;test@test.hu&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">rhino</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">0890f80c-02f5-4179-9acb-173b1c4d00e6</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.41.2</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Party Registration-35" enabled="false">
              <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
              <stringProp name="HTTPSampler.domain">channel.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/channel/partyRegistration</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;accountId&quot;:&quot;9062b90de19b43989005&quot;,&#xd;
  &quot;idType&quot;: &quot;EMAIL&quot;,&#xd;
  &quot;idValue&quot;: &quot;test@test.hu&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://channel.local/channel/partyRegistration</stringProp>
                  </elementProp>
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">rhino</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">0890f80c-02f5-4179-9acb-173b1c4d00e6</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.41.2</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Get Txn by Client Id" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Txn by Client Id-36" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">channel.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/channel/txnState/%7B%7BX-CorrelationID%7D%7D</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="requestType" elementType="Header">
                    <stringProp name="Header.name">requestType</stringProp>
                    <stringProp name="Header.value">transfers</stringProp>
                  </elementProp>
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">rhino</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">42cef3eb-a151-4977-a474-095bc27432a5</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.41.2</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Txn by Client Id-37" enabled="false">
              <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
              <stringProp name="HTTPSampler.domain">channel.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/channel/txnState/%7B%7BX-CorrelationID%7D%7D</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://channel.local/channel/txnState/%7B%7BX-CorrelationID%7D%7D</stringProp>
                  </elementProp>
                  <elementProp name="requestType" elementType="Header">
                    <stringProp name="Header.name">requestType</stringProp>
                    <stringProp name="Header.value">transfers</stringProp>
                  </elementProp>
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">rhino</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">42cef3eb-a151-4977-a474-095bc27432a5</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.41.2</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="GSMA API- GSMA P2P" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GSMA API- GSMA P2P-38" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">channel.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/channel/gsma/transfer</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;requestingOrganisationTransactionReference&quot;: &quot;string&quot;,&#xd;
  &quot;originalTransactionReference&quot;: &quot;string&quot;,&#xd;
  &quot;subType&quot;: &quot;string&quot;,&#xd;
  &quot;type&quot;: &quot;transfer&quot;,&#xd;
  &quot;amount&quot;: &quot;11.00&quot;,&#xd;
  &quot;currency&quot;: &quot;USD&quot;,&#xd;
  &quot;descriptionText&quot;: &quot;string&quot;,&#xd;
  &quot;fees&quot;: [&#xd;
    {&#xd;
      &quot;feeType&quot;: &quot;string&quot;,&#xd;
      &quot;feeAmount&quot;: &quot;11&quot;,&#xd;
      &quot;feeCurrency&quot;: &quot;USD&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;geoCode&quot;: &quot;37.423825,-122.082900&quot;,&#xd;
  &quot;internationalTransferInformation&quot;: {&#xd;
    &quot;quotationReference&quot;: &quot;string&quot;,&#xd;
    &quot;quoteId&quot;: &quot;string&quot;,&#xd;
    &quot;originCountry&quot;: &quot;USA&quot;,&#xd;
    &quot;deliveryMethod&quot;: &quot;directtoaccount&quot;,&#xd;
    &quot;receivingCountry&quot;: &quot;USA&quot;,&#xd;
    &quot;relationshipSender&quot;: &quot;string&quot;,&#xd;
    &quot;remittancePurpose&quot;: &quot;string&quot;&#xd;
  },&#xd;
  &quot;oneTimeCode&quot;: &quot;string&quot;,&#xd;
  &quot;receiverKyc&quot;: {&#xd;
    &quot;birthCountry&quot;: &quot;USA&quot;,&#xd;
    &quot;contactPhone&quot;: &quot;string&quot;,&#xd;
    &quot;dateOfBirth&quot;: &quot;2000-11-20&quot;,&#xd;
    &quot;emailAddress&quot;: &quot;string&quot;,&#xd;
    &quot;employerName&quot;: &quot;string&quot;,&#xd;
    &quot;gender&quot;: &quot;m&quot;,&#xd;
    &quot;idDocument&quot;: [&#xd;
      {&#xd;
        &quot;idType&quot;: &quot;passport&quot;,&#xd;
        &quot;idNumber&quot;: &quot;string&quot;,&#xd;
        &quot;issueDate&quot;: &quot;2022-09-28T12:51:19.260+00:00&quot;,&#xd;
        &quot;expiryDate&quot;: &quot;2022-09-28T12:51:19.260+00:00&quot;,&#xd;
        &quot;issuer&quot;: &quot;string&quot;,&#xd;
        &quot;issuerPlace&quot;: &quot;string&quot;,&#xd;
        &quot;issuerCountry&quot;: &quot;USA&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;nationality&quot;: &quot;USA&quot;,&#xd;
    &quot;occupation&quot;: &quot;string&quot;,&#xd;
    &quot;postalAddress&quot;: {&#xd;
      &quot;addressLine1&quot;: &quot;string&quot;,&#xd;
      &quot;addressLine2&quot;: &quot;string&quot;,&#xd;
      &quot;addressLine3&quot;: &quot;string&quot;,&#xd;
      &quot;city&quot;: &quot;string&quot;,&#xd;
      &quot;stateProvince&quot;: &quot;string&quot;,&#xd;
      &quot;postalCode&quot;: &quot;string&quot;,&#xd;
      &quot;country&quot;: &quot;USA&quot;&#xd;
    },&#xd;
    &quot;subjectName&quot;: {&#xd;
      &quot;title&quot;: &quot;string&quot;,&#xd;
      &quot;firstName&quot;: &quot;string&quot;,&#xd;
      &quot;middleName&quot;: &quot;string&quot;,&#xd;
      &quot;lastName&quot;: &quot;string&quot;,&#xd;
      &quot;nativeName&quot;: &quot;string&quot;&#xd;
    }&#xd;
  },&#xd;
  &quot;senderKyc&quot;: {&#xd;
    &quot;birthCountry&quot;: &quot;USA&quot;,&#xd;
    &quot;contactPhone&quot;: &quot;string&quot;,&#xd;
    &quot;dateOfBirth&quot;: &quot;2022-09-28T12:51:19.260+00:00&quot;,&#xd;
    &quot;emailAddress&quot;: &quot;string&quot;,&#xd;
    &quot;employerName&quot;: &quot;string&quot;,&#xd;
    &quot;gender&quot;: &quot;m&quot;,&#xd;
    &quot;idDocument&quot;: [&#xd;
      {&#xd;
        &quot;idType&quot;: &quot;passport&quot;,&#xd;
        &quot;idNumber&quot;: &quot;string&quot;,&#xd;
        &quot;issueDate&quot;: &quot;2022-09-28T12:51:19.260+00:00&quot;,&#xd;
        &quot;expiryDate&quot;: &quot;2022-09-28T12:51:19.260+00:00&quot;,&#xd;
        &quot;issuer&quot;: &quot;string&quot;,&#xd;
        &quot;issuerPlace&quot;: &quot;string&quot;,&#xd;
        &quot;issuerCountry&quot;: &quot;USA&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;nationality&quot;: &quot;USA&quot;,&#xd;
    &quot;occupation&quot;: &quot;string&quot;,&#xd;
    &quot;postalAddress&quot;: {&#xd;
      &quot;addressLine1&quot;: &quot;string&quot;,&#xd;
      &quot;addressLine2&quot;: &quot;string&quot;,&#xd;
      &quot;addressLine3&quot;: &quot;string&quot;,&#xd;
      &quot;city&quot;: &quot;string&quot;,&#xd;
      &quot;stateProvince&quot;: &quot;string&quot;,&#xd;
      &quot;postalCode&quot;: &quot;string&quot;,&#xd;
      &quot;country&quot;: &quot;USA&quot;&#xd;
    },&#xd;
    &quot;subjectName&quot;: {&#xd;
      &quot;title&quot;: &quot;string&quot;,&#xd;
      &quot;firstName&quot;: &quot;string&quot;,&#xd;
      &quot;middleName&quot;: &quot;string&quot;,&#xd;
      &quot;lastName&quot;: &quot;string&quot;,&#xd;
      &quot;nativeName&quot;: &quot;string&quot;&#xd;
    }&#xd;
  },&#xd;
  &quot;servicingIdentity&quot;: &quot;string&quot;,&#xd;
  &quot;requestDate&quot;: &quot;2022-09-28T12:51:19.260+00:00&quot;,&#xd;
  &quot;metadata&quot;: [&#xd;
    {&#xd;
      &quot;key&quot;: &quot;string&quot;,&#xd;
      &quot;value&quot;: &quot;string&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;creditParty&quot;: [&#xd;
    {&#xd;
      &quot;key&quot;: &quot;msisdn&quot;,&#xd;
      &quot;value&quot;: &quot;+449999112&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;debitParty&quot;: [&#xd;
    {&#xd;
      &quot;key&quot;: &quot;msisdn&quot;,&#xd;
      &quot;value&quot;: &quot;+449999999&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">rhino</stringProp>
                  </elementProp>
                  <elementProp name="X-CorrelationID" elementType="Header">
                    <stringProp name="Header.name">X-CorrelationID</stringProp>
                    <stringProp name="Header.value">12345</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">44e387d4-015f-4427-80ec-c52116117d08</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.41.2</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GSMA API- GSMA P2P-39" enabled="false">
              <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
              <stringProp name="HTTPSampler.domain">channel.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/channel/gsma/transfer</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;requestingOrganisationTransactionReference&quot;: &quot;string&quot;,&#xd;
  &quot;originalTransactionReference&quot;: &quot;string&quot;,&#xd;
  &quot;subType&quot;: &quot;string&quot;,&#xd;
  &quot;type&quot;: &quot;transfer&quot;,&#xd;
  &quot;amount&quot;: &quot;11.00&quot;,&#xd;
  &quot;currency&quot;: &quot;USD&quot;,&#xd;
  &quot;descriptionText&quot;: &quot;string&quot;,&#xd;
  &quot;fees&quot;: [&#xd;
    {&#xd;
      &quot;feeType&quot;: &quot;string&quot;,&#xd;
      &quot;feeAmount&quot;: &quot;11&quot;,&#xd;
      &quot;feeCurrency&quot;: &quot;USD&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;geoCode&quot;: &quot;37.423825,-122.082900&quot;,&#xd;
  &quot;internationalTransferInformation&quot;: {&#xd;
    &quot;quotationReference&quot;: &quot;string&quot;,&#xd;
    &quot;quoteId&quot;: &quot;string&quot;,&#xd;
    &quot;originCountry&quot;: &quot;USA&quot;,&#xd;
    &quot;deliveryMethod&quot;: &quot;directtoaccount&quot;,&#xd;
    &quot;receivingCountry&quot;: &quot;USA&quot;,&#xd;
    &quot;relationshipSender&quot;: &quot;string&quot;,&#xd;
    &quot;remittancePurpose&quot;: &quot;string&quot;&#xd;
  },&#xd;
  &quot;oneTimeCode&quot;: &quot;string&quot;,&#xd;
  &quot;receiverKyc&quot;: {&#xd;
    &quot;birthCountry&quot;: &quot;USA&quot;,&#xd;
    &quot;contactPhone&quot;: &quot;string&quot;,&#xd;
    &quot;dateOfBirth&quot;: &quot;2000-11-20&quot;,&#xd;
    &quot;emailAddress&quot;: &quot;string&quot;,&#xd;
    &quot;employerName&quot;: &quot;string&quot;,&#xd;
    &quot;gender&quot;: &quot;m&quot;,&#xd;
    &quot;idDocument&quot;: [&#xd;
      {&#xd;
        &quot;idType&quot;: &quot;passport&quot;,&#xd;
        &quot;idNumber&quot;: &quot;string&quot;,&#xd;
        &quot;issueDate&quot;: &quot;2022-09-28T12:51:19.260+00:00&quot;,&#xd;
        &quot;expiryDate&quot;: &quot;2022-09-28T12:51:19.260+00:00&quot;,&#xd;
        &quot;issuer&quot;: &quot;string&quot;,&#xd;
        &quot;issuerPlace&quot;: &quot;string&quot;,&#xd;
        &quot;issuerCountry&quot;: &quot;USA&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;nationality&quot;: &quot;USA&quot;,&#xd;
    &quot;occupation&quot;: &quot;string&quot;,&#xd;
    &quot;postalAddress&quot;: {&#xd;
      &quot;addressLine1&quot;: &quot;string&quot;,&#xd;
      &quot;addressLine2&quot;: &quot;string&quot;,&#xd;
      &quot;addressLine3&quot;: &quot;string&quot;,&#xd;
      &quot;city&quot;: &quot;string&quot;,&#xd;
      &quot;stateProvince&quot;: &quot;string&quot;,&#xd;
      &quot;postalCode&quot;: &quot;string&quot;,&#xd;
      &quot;country&quot;: &quot;USA&quot;&#xd;
    },&#xd;
    &quot;subjectName&quot;: {&#xd;
      &quot;title&quot;: &quot;string&quot;,&#xd;
      &quot;firstName&quot;: &quot;string&quot;,&#xd;
      &quot;middleName&quot;: &quot;string&quot;,&#xd;
      &quot;lastName&quot;: &quot;string&quot;,&#xd;
      &quot;nativeName&quot;: &quot;string&quot;&#xd;
    }&#xd;
  },&#xd;
  &quot;senderKyc&quot;: {&#xd;
    &quot;birthCountry&quot;: &quot;USA&quot;,&#xd;
    &quot;contactPhone&quot;: &quot;string&quot;,&#xd;
    &quot;dateOfBirth&quot;: &quot;2022-09-28T12:51:19.260+00:00&quot;,&#xd;
    &quot;emailAddress&quot;: &quot;string&quot;,&#xd;
    &quot;employerName&quot;: &quot;string&quot;,&#xd;
    &quot;gender&quot;: &quot;m&quot;,&#xd;
    &quot;idDocument&quot;: [&#xd;
      {&#xd;
        &quot;idType&quot;: &quot;passport&quot;,&#xd;
        &quot;idNumber&quot;: &quot;string&quot;,&#xd;
        &quot;issueDate&quot;: &quot;2022-09-28T12:51:19.260+00:00&quot;,&#xd;
        &quot;expiryDate&quot;: &quot;2022-09-28T12:51:19.260+00:00&quot;,&#xd;
        &quot;issuer&quot;: &quot;string&quot;,&#xd;
        &quot;issuerPlace&quot;: &quot;string&quot;,&#xd;
        &quot;issuerCountry&quot;: &quot;USA&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;nationality&quot;: &quot;USA&quot;,&#xd;
    &quot;occupation&quot;: &quot;string&quot;,&#xd;
    &quot;postalAddress&quot;: {&#xd;
      &quot;addressLine1&quot;: &quot;string&quot;,&#xd;
      &quot;addressLine2&quot;: &quot;string&quot;,&#xd;
      &quot;addressLine3&quot;: &quot;string&quot;,&#xd;
      &quot;city&quot;: &quot;string&quot;,&#xd;
      &quot;stateProvince&quot;: &quot;string&quot;,&#xd;
      &quot;postalCode&quot;: &quot;string&quot;,&#xd;
      &quot;country&quot;: &quot;USA&quot;&#xd;
    },&#xd;
    &quot;subjectName&quot;: {&#xd;
      &quot;title&quot;: &quot;string&quot;,&#xd;
      &quot;firstName&quot;: &quot;string&quot;,&#xd;
      &quot;middleName&quot;: &quot;string&quot;,&#xd;
      &quot;lastName&quot;: &quot;string&quot;,&#xd;
      &quot;nativeName&quot;: &quot;string&quot;&#xd;
    }&#xd;
  },&#xd;
  &quot;servicingIdentity&quot;: &quot;string&quot;,&#xd;
  &quot;requestDate&quot;: &quot;2022-09-28T12:51:19.260+00:00&quot;,&#xd;
  &quot;metadata&quot;: [&#xd;
    {&#xd;
      &quot;key&quot;: &quot;string&quot;,&#xd;
      &quot;value&quot;: &quot;string&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;creditParty&quot;: [&#xd;
    {&#xd;
      &quot;key&quot;: &quot;msisdn&quot;,&#xd;
      &quot;value&quot;: &quot;+449999112&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;debitParty&quot;: [&#xd;
    {&#xd;
      &quot;key&quot;: &quot;msisdn&quot;,&#xd;
      &quot;value&quot;: &quot;+449999999&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://channel.local/channel/gsma/transfer</stringProp>
                  </elementProp>
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">rhino</stringProp>
                  </elementProp>
                  <elementProp name="X-CorrelationID" elementType="Header">
                    <stringProp name="Header.name">X-CorrelationID</stringProp>
                    <stringProp name="Header.value">12345</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">44e387d4-015f-4427-80ec-c52116117d08</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.41.2</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="GSMA API- GSMA Transaction" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GSMA API- GSMA Transaction-40" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">channel.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/channel/gsma/transaction</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;requestingOrganisationTransactionReference&quot;: &quot;string&quot;,&#xd;
    &quot;subType&quot;: &quot;inbound&quot;,&#xd;
    &quot;type&quot;: &quot;transfer&quot;,&#xd;
    &quot;amount&quot;: &quot;11&quot;,&#xd;
    &quot;currency&quot;: &quot;USD&quot;,&#xd;
    &quot;descriptionText&quot;: &quot;string&quot;,&#xd;
    &quot;requestDate&quot;: &quot;2022-09-28T12:51:19.260+00:00&quot;,&#xd;
    &quot;customData&quot;: [&#xd;
        {&#xd;
            &quot;key&quot;: &quot;string&quot;,&#xd;
            &quot;value&quot;: &quot;string&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;payer&quot;: [&#xd;
        {&#xd;
            &quot;partyIdType&quot;: &quot;MSISDN&quot;,&#xd;
            &quot;partyIdIdentifier&quot;: &quot;{{MSISDN}}&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;payee&quot;: [&#xd;
        {&#xd;
            &quot;partyIdType&quot;: &quot;accountId&quot;,&#xd;
            &quot;partyIdIdentifier&quot;: &quot;{{accountId}}&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="X-CorrelationID" elementType="Header">
                    <stringProp name="Header.name">X-CorrelationID</stringProp>
                    <stringProp name="Header.value">12345</stringProp>
                  </elementProp>
                  <elementProp name="amsName" elementType="Header">
                    <stringProp name="Header.name">amsName</stringProp>
                    <stringProp name="Header.value">{{amsName}}</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">efed9936-4031-4f72-9e6b-99894c4ad962</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="accountHoldingInstitutionId" elementType="Header">
                    <stringProp name="Header.name">accountHoldingInstitutionId</stringProp>
                    <stringProp name="Header.value">{{accountHoldingInstitutionId}}</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.41.2</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GSMA API- GSMA Transaction-41" enabled="false">
              <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
              <stringProp name="HTTPSampler.domain">channel.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/channel/gsma/transaction</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;requestingOrganisationTransactionReference&quot;: &quot;string&quot;,&#xd;
    &quot;subType&quot;: &quot;inbound&quot;,&#xd;
    &quot;type&quot;: &quot;transfer&quot;,&#xd;
    &quot;amount&quot;: &quot;11&quot;,&#xd;
    &quot;currency&quot;: &quot;USD&quot;,&#xd;
    &quot;descriptionText&quot;: &quot;string&quot;,&#xd;
    &quot;requestDate&quot;: &quot;2022-09-28T12:51:19.260+00:00&quot;,&#xd;
    &quot;customData&quot;: [&#xd;
        {&#xd;
            &quot;key&quot;: &quot;string&quot;,&#xd;
            &quot;value&quot;: &quot;string&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;payer&quot;: [&#xd;
        {&#xd;
            &quot;partyIdType&quot;: &quot;MSISDN&quot;,&#xd;
            &quot;partyIdIdentifier&quot;: &quot;{{MSISDN}}&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;payee&quot;: [&#xd;
        {&#xd;
            &quot;partyIdType&quot;: &quot;accountId&quot;,&#xd;
            &quot;partyIdIdentifier&quot;: &quot;{{accountId}}&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://channel.local/channel/gsma/transaction</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">efed9936-4031-4f72-9e6b-99894c4ad962</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="X-CorrelationID" elementType="Header">
                    <stringProp name="Header.name">X-CorrelationID</stringProp>
                    <stringProp name="Header.value">12345</stringProp>
                  </elementProp>
                  <elementProp name="amsName" elementType="Header">
                    <stringProp name="Header.name">amsName</stringProp>
                    <stringProp name="Header.value">{{amsName}}</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="accountHoldingInstitutionId" elementType="Header">
                    <stringProp name="Header.name">accountHoldingInstitutionId</stringProp>
                    <stringProp name="Header.value">{{accountHoldingInstitutionId}}</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.41.2</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="GSMA API- International Remmitance Payee" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GSMA API- International Remmitance Payee-42" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">channel.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/channel/gsma/deposit</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;requestingOrganisationTransactionReference&quot;: &quot;string&quot;,&#xd;
  &quot;originalTransactionReference&quot;: &quot;string&quot;,&#xd;
  &quot;subType&quot;: &quot;string&quot;,&#xd;
  &quot;type&quot;: &quot;transfer&quot;,&#xd;
  &quot;amount&quot;: &quot;11.00&quot;,&#xd;
  &quot;currency&quot;: &quot;USD&quot;,&#xd;
  &quot;descriptionText&quot;: &quot;string&quot;,&#xd;
  &quot;fees&quot;: [&#xd;
    {&#xd;
      &quot;feeType&quot;: &quot;string&quot;,&#xd;
      &quot;feeAmount&quot;: &quot;11&quot;,&#xd;
      &quot;feeCurrency&quot;: &quot;USD&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;geoCode&quot;: &quot;37.423825,-122.082900&quot;,&#xd;
  &quot;internationalTransferInformation&quot;: {&#xd;
    &quot;quotationReference&quot;: &quot;string&quot;,&#xd;
    &quot;quoteId&quot;: &quot;string&quot;,&#xd;
    &quot;originCountry&quot;: &quot;USA&quot;,&#xd;
    &quot;deliveryMethod&quot;: &quot;directtoaccount&quot;,&#xd;
    &quot;receivingCountry&quot;: &quot;USA&quot;,&#xd;
    &quot;relationshipSender&quot;: &quot;string&quot;,&#xd;
    &quot;remittancePurpose&quot;: &quot;string&quot;&#xd;
  },&#xd;
  &quot;oneTimeCode&quot;: &quot;string&quot;,&#xd;
  &quot;receiverKyc&quot;: {&#xd;
    &quot;birthCountry&quot;: &quot;USA&quot;,&#xd;
    &quot;contactPhone&quot;: &quot;string&quot;,&#xd;
    &quot;dateOfBirth&quot;: &quot;2000-11-20&quot;,&#xd;
    &quot;emailAddress&quot;: &quot;string&quot;,&#xd;
    &quot;employerName&quot;: &quot;string&quot;,&#xd;
    &quot;gender&quot;: &quot;m&quot;,&#xd;
    &quot;idDocument&quot;: [&#xd;
      {&#xd;
        &quot;idType&quot;: &quot;passport&quot;,&#xd;
        &quot;idNumber&quot;: &quot;string&quot;,&#xd;
        &quot;issueDate&quot;: &quot;2022-09-28T12:51:19.260+00:00&quot;,&#xd;
        &quot;expiryDate&quot;: &quot;2022-09-28T12:51:19.260+00:00&quot;,&#xd;
        &quot;issuer&quot;: &quot;string&quot;,&#xd;
        &quot;issuerPlace&quot;: &quot;string&quot;,&#xd;
        &quot;issuerCountry&quot;: &quot;USA&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;nationality&quot;: &quot;USA&quot;,&#xd;
    &quot;occupation&quot;: &quot;string&quot;,&#xd;
    &quot;postalAddress&quot;: {&#xd;
      &quot;addressLine1&quot;: &quot;string&quot;,&#xd;
      &quot;addressLine2&quot;: &quot;string&quot;,&#xd;
      &quot;addressLine3&quot;: &quot;string&quot;,&#xd;
      &quot;city&quot;: &quot;string&quot;,&#xd;
      &quot;stateProvince&quot;: &quot;string&quot;,&#xd;
      &quot;postalCode&quot;: &quot;string&quot;,&#xd;
      &quot;country&quot;: &quot;USA&quot;&#xd;
    },&#xd;
    &quot;subjectName&quot;: {&#xd;
      &quot;title&quot;: &quot;string&quot;,&#xd;
      &quot;firstName&quot;: &quot;string&quot;,&#xd;
      &quot;middleName&quot;: &quot;string&quot;,&#xd;
      &quot;lastName&quot;: &quot;string&quot;,&#xd;
      &quot;nativeName&quot;: &quot;string&quot;&#xd;
    }&#xd;
  },&#xd;
  &quot;senderKyc&quot;: {&#xd;
    &quot;birthCountry&quot;: &quot;USA&quot;,&#xd;
    &quot;contactPhone&quot;: &quot;string&quot;,&#xd;
    &quot;dateOfBirth&quot;: &quot;2022-09-28T12:51:19.260+00:00&quot;,&#xd;
    &quot;emailAddress&quot;: &quot;string&quot;,&#xd;
    &quot;employerName&quot;: &quot;string&quot;,&#xd;
    &quot;gender&quot;: &quot;m&quot;,&#xd;
    &quot;idDocument&quot;: [&#xd;
      {&#xd;
        &quot;idType&quot;: &quot;passport&quot;,&#xd;
        &quot;idNumber&quot;: &quot;string&quot;,&#xd;
        &quot;issueDate&quot;: &quot;2022-09-28T12:51:19.260+00:00&quot;,&#xd;
        &quot;expiryDate&quot;: &quot;2022-09-28T12:51:19.260+00:00&quot;,&#xd;
        &quot;issuer&quot;: &quot;string&quot;,&#xd;
        &quot;issuerPlace&quot;: &quot;string&quot;,&#xd;
        &quot;issuerCountry&quot;: &quot;USA&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;nationality&quot;: &quot;USA&quot;,&#xd;
    &quot;occupation&quot;: &quot;string&quot;,&#xd;
    &quot;postalAddress&quot;: {&#xd;
      &quot;addressLine1&quot;: &quot;string&quot;,&#xd;
      &quot;addressLine2&quot;: &quot;string&quot;,&#xd;
      &quot;addressLine3&quot;: &quot;string&quot;,&#xd;
      &quot;city&quot;: &quot;string&quot;,&#xd;
      &quot;stateProvince&quot;: &quot;string&quot;,&#xd;
      &quot;postalCode&quot;: &quot;string&quot;,&#xd;
      &quot;country&quot;: &quot;USA&quot;&#xd;
    },&#xd;
    &quot;subjectName&quot;: {&#xd;
      &quot;title&quot;: &quot;string&quot;,&#xd;
      &quot;firstName&quot;: &quot;string&quot;,&#xd;
      &quot;middleName&quot;: &quot;string&quot;,&#xd;
      &quot;lastName&quot;: &quot;string&quot;,&#xd;
      &quot;nativeName&quot;: &quot;string&quot;&#xd;
    }&#xd;
  },&#xd;
  &quot;servicingIdentity&quot;: &quot;string&quot;,&#xd;
  &quot;requestDate&quot;: &quot;2022-09-28T12:51:19.260+00:00&quot;,&#xd;
  &quot;metadata&quot;: [&#xd;
    {&#xd;
      &quot;key&quot;: &quot;string&quot;,&#xd;
      &quot;value&quot;: &quot;string&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;creditParty&quot;: [&#xd;
    {&#xd;
      &quot;key&quot;: &quot;msisdn&quot;,&#xd;
      &quot;value&quot;: &quot;+449999112&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;debitParty&quot;: [&#xd;
    {&#xd;
      &quot;key&quot;: &quot;msisdn&quot;,&#xd;
      &quot;value&quot;: &quot;+449999999&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">{{PayeeTenantName}}</stringProp>
                  </elementProp>
                  <elementProp name="X-CorrelationID" elementType="Header">
                    <stringProp name="Header.name">X-CorrelationID</stringProp>
                    <stringProp name="Header.value">12345</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">8d57472a-b1fd-4969-91b1-1d2e3b9c711a</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.41.2</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GSMA API- International Remmitance Payee-43" enabled="false">
              <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
              <stringProp name="HTTPSampler.domain">channel.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/channel/gsma/deposit</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;requestingOrganisationTransactionReference&quot;: &quot;string&quot;,&#xd;
  &quot;originalTransactionReference&quot;: &quot;string&quot;,&#xd;
  &quot;subType&quot;: &quot;string&quot;,&#xd;
  &quot;type&quot;: &quot;transfer&quot;,&#xd;
  &quot;amount&quot;: &quot;11.00&quot;,&#xd;
  &quot;currency&quot;: &quot;USD&quot;,&#xd;
  &quot;descriptionText&quot;: &quot;string&quot;,&#xd;
  &quot;fees&quot;: [&#xd;
    {&#xd;
      &quot;feeType&quot;: &quot;string&quot;,&#xd;
      &quot;feeAmount&quot;: &quot;11&quot;,&#xd;
      &quot;feeCurrency&quot;: &quot;USD&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;geoCode&quot;: &quot;37.423825,-122.082900&quot;,&#xd;
  &quot;internationalTransferInformation&quot;: {&#xd;
    &quot;quotationReference&quot;: &quot;string&quot;,&#xd;
    &quot;quoteId&quot;: &quot;string&quot;,&#xd;
    &quot;originCountry&quot;: &quot;USA&quot;,&#xd;
    &quot;deliveryMethod&quot;: &quot;directtoaccount&quot;,&#xd;
    &quot;receivingCountry&quot;: &quot;USA&quot;,&#xd;
    &quot;relationshipSender&quot;: &quot;string&quot;,&#xd;
    &quot;remittancePurpose&quot;: &quot;string&quot;&#xd;
  },&#xd;
  &quot;oneTimeCode&quot;: &quot;string&quot;,&#xd;
  &quot;receiverKyc&quot;: {&#xd;
    &quot;birthCountry&quot;: &quot;USA&quot;,&#xd;
    &quot;contactPhone&quot;: &quot;string&quot;,&#xd;
    &quot;dateOfBirth&quot;: &quot;2000-11-20&quot;,&#xd;
    &quot;emailAddress&quot;: &quot;string&quot;,&#xd;
    &quot;employerName&quot;: &quot;string&quot;,&#xd;
    &quot;gender&quot;: &quot;m&quot;,&#xd;
    &quot;idDocument&quot;: [&#xd;
      {&#xd;
        &quot;idType&quot;: &quot;passport&quot;,&#xd;
        &quot;idNumber&quot;: &quot;string&quot;,&#xd;
        &quot;issueDate&quot;: &quot;2022-09-28T12:51:19.260+00:00&quot;,&#xd;
        &quot;expiryDate&quot;: &quot;2022-09-28T12:51:19.260+00:00&quot;,&#xd;
        &quot;issuer&quot;: &quot;string&quot;,&#xd;
        &quot;issuerPlace&quot;: &quot;string&quot;,&#xd;
        &quot;issuerCountry&quot;: &quot;USA&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;nationality&quot;: &quot;USA&quot;,&#xd;
    &quot;occupation&quot;: &quot;string&quot;,&#xd;
    &quot;postalAddress&quot;: {&#xd;
      &quot;addressLine1&quot;: &quot;string&quot;,&#xd;
      &quot;addressLine2&quot;: &quot;string&quot;,&#xd;
      &quot;addressLine3&quot;: &quot;string&quot;,&#xd;
      &quot;city&quot;: &quot;string&quot;,&#xd;
      &quot;stateProvince&quot;: &quot;string&quot;,&#xd;
      &quot;postalCode&quot;: &quot;string&quot;,&#xd;
      &quot;country&quot;: &quot;USA&quot;&#xd;
    },&#xd;
    &quot;subjectName&quot;: {&#xd;
      &quot;title&quot;: &quot;string&quot;,&#xd;
      &quot;firstName&quot;: &quot;string&quot;,&#xd;
      &quot;middleName&quot;: &quot;string&quot;,&#xd;
      &quot;lastName&quot;: &quot;string&quot;,&#xd;
      &quot;nativeName&quot;: &quot;string&quot;&#xd;
    }&#xd;
  },&#xd;
  &quot;senderKyc&quot;: {&#xd;
    &quot;birthCountry&quot;: &quot;USA&quot;,&#xd;
    &quot;contactPhone&quot;: &quot;string&quot;,&#xd;
    &quot;dateOfBirth&quot;: &quot;2022-09-28T12:51:19.260+00:00&quot;,&#xd;
    &quot;emailAddress&quot;: &quot;string&quot;,&#xd;
    &quot;employerName&quot;: &quot;string&quot;,&#xd;
    &quot;gender&quot;: &quot;m&quot;,&#xd;
    &quot;idDocument&quot;: [&#xd;
      {&#xd;
        &quot;idType&quot;: &quot;passport&quot;,&#xd;
        &quot;idNumber&quot;: &quot;string&quot;,&#xd;
        &quot;issueDate&quot;: &quot;2022-09-28T12:51:19.260+00:00&quot;,&#xd;
        &quot;expiryDate&quot;: &quot;2022-09-28T12:51:19.260+00:00&quot;,&#xd;
        &quot;issuer&quot;: &quot;string&quot;,&#xd;
        &quot;issuerPlace&quot;: &quot;string&quot;,&#xd;
        &quot;issuerCountry&quot;: &quot;USA&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;nationality&quot;: &quot;USA&quot;,&#xd;
    &quot;occupation&quot;: &quot;string&quot;,&#xd;
    &quot;postalAddress&quot;: {&#xd;
      &quot;addressLine1&quot;: &quot;string&quot;,&#xd;
      &quot;addressLine2&quot;: &quot;string&quot;,&#xd;
      &quot;addressLine3&quot;: &quot;string&quot;,&#xd;
      &quot;city&quot;: &quot;string&quot;,&#xd;
      &quot;stateProvince&quot;: &quot;string&quot;,&#xd;
      &quot;postalCode&quot;: &quot;string&quot;,&#xd;
      &quot;country&quot;: &quot;USA&quot;&#xd;
    },&#xd;
    &quot;subjectName&quot;: {&#xd;
      &quot;title&quot;: &quot;string&quot;,&#xd;
      &quot;firstName&quot;: &quot;string&quot;,&#xd;
      &quot;middleName&quot;: &quot;string&quot;,&#xd;
      &quot;lastName&quot;: &quot;string&quot;,&#xd;
      &quot;nativeName&quot;: &quot;string&quot;&#xd;
    }&#xd;
  },&#xd;
  &quot;servicingIdentity&quot;: &quot;string&quot;,&#xd;
  &quot;requestDate&quot;: &quot;2022-09-28T12:51:19.260+00:00&quot;,&#xd;
  &quot;metadata&quot;: [&#xd;
    {&#xd;
      &quot;key&quot;: &quot;string&quot;,&#xd;
      &quot;value&quot;: &quot;string&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;creditParty&quot;: [&#xd;
    {&#xd;
      &quot;key&quot;: &quot;msisdn&quot;,&#xd;
      &quot;value&quot;: &quot;+449999112&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;debitParty&quot;: [&#xd;
    {&#xd;
      &quot;key&quot;: &quot;msisdn&quot;,&#xd;
      &quot;value&quot;: &quot;+449999999&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://channel.local/channel/gsma/deposit</stringProp>
                  </elementProp>
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">{{PayeeTenantName}}</stringProp>
                  </elementProp>
                  <elementProp name="X-CorrelationID" elementType="Header">
                    <stringProp name="Header.name">X-CorrelationID</stringProp>
                    <stringProp name="Header.value">12345</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">8d57472a-b1fd-4969-91b1-1d2e3b9c711a</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.41.2</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="GSMA API- Transfer Query" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GSMA API- Transfer Query-44" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">channel.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/channel/gsma/deposit</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;requestingOrganisationTransactionReference&quot;: &quot;string&quot;,&#xd;
  &quot;originalTransactionReference&quot;: &quot;string&quot;,&#xd;
  &quot;subType&quot;: &quot;string&quot;,&#xd;
  &quot;type&quot;: &quot;transfer&quot;,&#xd;
  &quot;amount&quot;: &quot;11.00&quot;,&#xd;
  &quot;currency&quot;: &quot;USD&quot;,&#xd;
  &quot;descriptionText&quot;: &quot;string&quot;,&#xd;
  &quot;fees&quot;: [&#xd;
    {&#xd;
      &quot;feeType&quot;: &quot;string&quot;,&#xd;
      &quot;feeAmount&quot;: &quot;11&quot;,&#xd;
      &quot;feeCurrency&quot;: &quot;USD&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;geoCode&quot;: &quot;37.423825,-122.082900&quot;,&#xd;
  &quot;internationalTransferInformation&quot;: {&#xd;
    &quot;quotationReference&quot;: &quot;string&quot;,&#xd;
    &quot;quoteId&quot;: &quot;string&quot;,&#xd;
    &quot;originCountry&quot;: &quot;USA&quot;,&#xd;
    &quot;deliveryMethod&quot;: &quot;directtoaccount&quot;,&#xd;
    &quot;receivingCountry&quot;: &quot;USA&quot;,&#xd;
    &quot;relationshipSender&quot;: &quot;string&quot;,&#xd;
    &quot;remittancePurpose&quot;: &quot;string&quot;&#xd;
  },&#xd;
  &quot;oneTimeCode&quot;: &quot;string&quot;,&#xd;
  &quot;receiverKyc&quot;: {&#xd;
    &quot;birthCountry&quot;: &quot;USA&quot;,&#xd;
    &quot;contactPhone&quot;: &quot;string&quot;,&#xd;
    &quot;dateOfBirth&quot;: &quot;2000-11-20&quot;,&#xd;
    &quot;emailAddress&quot;: &quot;string&quot;,&#xd;
    &quot;employerName&quot;: &quot;string&quot;,&#xd;
    &quot;gender&quot;: &quot;m&quot;,&#xd;
    &quot;idDocument&quot;: [&#xd;
      {&#xd;
        &quot;idType&quot;: &quot;passport&quot;,&#xd;
        &quot;idNumber&quot;: &quot;string&quot;,&#xd;
        &quot;issueDate&quot;: &quot;2022-09-28T12:51:19.260+00:00&quot;,&#xd;
        &quot;expiryDate&quot;: &quot;2022-09-28T12:51:19.260+00:00&quot;,&#xd;
        &quot;issuer&quot;: &quot;string&quot;,&#xd;
        &quot;issuerPlace&quot;: &quot;string&quot;,&#xd;
        &quot;issuerCountry&quot;: &quot;USA&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;nationality&quot;: &quot;USA&quot;,&#xd;
    &quot;occupation&quot;: &quot;string&quot;,&#xd;
    &quot;postalAddress&quot;: {&#xd;
      &quot;addressLine1&quot;: &quot;string&quot;,&#xd;
      &quot;addressLine2&quot;: &quot;string&quot;,&#xd;
      &quot;addressLine3&quot;: &quot;string&quot;,&#xd;
      &quot;city&quot;: &quot;string&quot;,&#xd;
      &quot;stateProvince&quot;: &quot;string&quot;,&#xd;
      &quot;postalCode&quot;: &quot;string&quot;,&#xd;
      &quot;country&quot;: &quot;USA&quot;&#xd;
    },&#xd;
    &quot;subjectName&quot;: {&#xd;
      &quot;title&quot;: &quot;string&quot;,&#xd;
      &quot;firstName&quot;: &quot;string&quot;,&#xd;
      &quot;middleName&quot;: &quot;string&quot;,&#xd;
      &quot;lastName&quot;: &quot;string&quot;,&#xd;
      &quot;nativeName&quot;: &quot;string&quot;&#xd;
    }&#xd;
  },&#xd;
  &quot;senderKyc&quot;: {&#xd;
    &quot;birthCountry&quot;: &quot;USA&quot;,&#xd;
    &quot;contactPhone&quot;: &quot;string&quot;,&#xd;
    &quot;dateOfBirth&quot;: &quot;2022-09-28T12:51:19.260+00:00&quot;,&#xd;
    &quot;emailAddress&quot;: &quot;string&quot;,&#xd;
    &quot;employerName&quot;: &quot;string&quot;,&#xd;
    &quot;gender&quot;: &quot;m&quot;,&#xd;
    &quot;idDocument&quot;: [&#xd;
      {&#xd;
        &quot;idType&quot;: &quot;passport&quot;,&#xd;
        &quot;idNumber&quot;: &quot;string&quot;,&#xd;
        &quot;issueDate&quot;: &quot;2022-09-28T12:51:19.260+00:00&quot;,&#xd;
        &quot;expiryDate&quot;: &quot;2022-09-28T12:51:19.260+00:00&quot;,&#xd;
        &quot;issuer&quot;: &quot;string&quot;,&#xd;
        &quot;issuerPlace&quot;: &quot;string&quot;,&#xd;
        &quot;issuerCountry&quot;: &quot;USA&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;nationality&quot;: &quot;USA&quot;,&#xd;
    &quot;occupation&quot;: &quot;string&quot;,&#xd;
    &quot;postalAddress&quot;: {&#xd;
      &quot;addressLine1&quot;: &quot;string&quot;,&#xd;
      &quot;addressLine2&quot;: &quot;string&quot;,&#xd;
      &quot;addressLine3&quot;: &quot;string&quot;,&#xd;
      &quot;city&quot;: &quot;string&quot;,&#xd;
      &quot;stateProvince&quot;: &quot;string&quot;,&#xd;
      &quot;postalCode&quot;: &quot;string&quot;,&#xd;
      &quot;country&quot;: &quot;USA&quot;&#xd;
    },&#xd;
    &quot;subjectName&quot;: {&#xd;
      &quot;title&quot;: &quot;string&quot;,&#xd;
      &quot;firstName&quot;: &quot;string&quot;,&#xd;
      &quot;middleName&quot;: &quot;string&quot;,&#xd;
      &quot;lastName&quot;: &quot;string&quot;,&#xd;
      &quot;nativeName&quot;: &quot;string&quot;&#xd;
    }&#xd;
  },&#xd;
  &quot;servicingIdentity&quot;: &quot;string&quot;,&#xd;
  &quot;requestDate&quot;: &quot;2022-09-28T12:51:19.260+00:00&quot;,&#xd;
  &quot;metadata&quot;: [&#xd;
    {&#xd;
      &quot;key&quot;: &quot;string&quot;,&#xd;
      &quot;value&quot;: &quot;string&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;creditParty&quot;: [&#xd;
    {&#xd;
      &quot;key&quot;: &quot;msisdn&quot;,&#xd;
      &quot;value&quot;: &quot;+449999112&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;debitParty&quot;: [&#xd;
    {&#xd;
      &quot;key&quot;: &quot;msisdn&quot;,&#xd;
      &quot;value&quot;: &quot;+449999999&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">{{PayeeTenantName}}</stringProp>
                  </elementProp>
                  <elementProp name="X-CorrelationID" elementType="Header">
                    <stringProp name="Header.name">X-CorrelationID</stringProp>
                    <stringProp name="Header.value">12345</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">54cb6424-fb84-403f-b5e3-db8bf7091e18</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.41.2</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GSMA API- Transfer Query-45" enabled="false">
              <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
              <stringProp name="HTTPSampler.domain">channel.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/channel/gsma/deposit</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;requestingOrganisationTransactionReference&quot;: &quot;string&quot;,&#xd;
  &quot;originalTransactionReference&quot;: &quot;string&quot;,&#xd;
  &quot;subType&quot;: &quot;string&quot;,&#xd;
  &quot;type&quot;: &quot;transfer&quot;,&#xd;
  &quot;amount&quot;: &quot;11.00&quot;,&#xd;
  &quot;currency&quot;: &quot;USD&quot;,&#xd;
  &quot;descriptionText&quot;: &quot;string&quot;,&#xd;
  &quot;fees&quot;: [&#xd;
    {&#xd;
      &quot;feeType&quot;: &quot;string&quot;,&#xd;
      &quot;feeAmount&quot;: &quot;11&quot;,&#xd;
      &quot;feeCurrency&quot;: &quot;USD&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;geoCode&quot;: &quot;37.423825,-122.082900&quot;,&#xd;
  &quot;internationalTransferInformation&quot;: {&#xd;
    &quot;quotationReference&quot;: &quot;string&quot;,&#xd;
    &quot;quoteId&quot;: &quot;string&quot;,&#xd;
    &quot;originCountry&quot;: &quot;USA&quot;,&#xd;
    &quot;deliveryMethod&quot;: &quot;directtoaccount&quot;,&#xd;
    &quot;receivingCountry&quot;: &quot;USA&quot;,&#xd;
    &quot;relationshipSender&quot;: &quot;string&quot;,&#xd;
    &quot;remittancePurpose&quot;: &quot;string&quot;&#xd;
  },&#xd;
  &quot;oneTimeCode&quot;: &quot;string&quot;,&#xd;
  &quot;receiverKyc&quot;: {&#xd;
    &quot;birthCountry&quot;: &quot;USA&quot;,&#xd;
    &quot;contactPhone&quot;: &quot;string&quot;,&#xd;
    &quot;dateOfBirth&quot;: &quot;2000-11-20&quot;,&#xd;
    &quot;emailAddress&quot;: &quot;string&quot;,&#xd;
    &quot;employerName&quot;: &quot;string&quot;,&#xd;
    &quot;gender&quot;: &quot;m&quot;,&#xd;
    &quot;idDocument&quot;: [&#xd;
      {&#xd;
        &quot;idType&quot;: &quot;passport&quot;,&#xd;
        &quot;idNumber&quot;: &quot;string&quot;,&#xd;
        &quot;issueDate&quot;: &quot;2022-09-28T12:51:19.260+00:00&quot;,&#xd;
        &quot;expiryDate&quot;: &quot;2022-09-28T12:51:19.260+00:00&quot;,&#xd;
        &quot;issuer&quot;: &quot;string&quot;,&#xd;
        &quot;issuerPlace&quot;: &quot;string&quot;,&#xd;
        &quot;issuerCountry&quot;: &quot;USA&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;nationality&quot;: &quot;USA&quot;,&#xd;
    &quot;occupation&quot;: &quot;string&quot;,&#xd;
    &quot;postalAddress&quot;: {&#xd;
      &quot;addressLine1&quot;: &quot;string&quot;,&#xd;
      &quot;addressLine2&quot;: &quot;string&quot;,&#xd;
      &quot;addressLine3&quot;: &quot;string&quot;,&#xd;
      &quot;city&quot;: &quot;string&quot;,&#xd;
      &quot;stateProvince&quot;: &quot;string&quot;,&#xd;
      &quot;postalCode&quot;: &quot;string&quot;,&#xd;
      &quot;country&quot;: &quot;USA&quot;&#xd;
    },&#xd;
    &quot;subjectName&quot;: {&#xd;
      &quot;title&quot;: &quot;string&quot;,&#xd;
      &quot;firstName&quot;: &quot;string&quot;,&#xd;
      &quot;middleName&quot;: &quot;string&quot;,&#xd;
      &quot;lastName&quot;: &quot;string&quot;,&#xd;
      &quot;nativeName&quot;: &quot;string&quot;&#xd;
    }&#xd;
  },&#xd;
  &quot;senderKyc&quot;: {&#xd;
    &quot;birthCountry&quot;: &quot;USA&quot;,&#xd;
    &quot;contactPhone&quot;: &quot;string&quot;,&#xd;
    &quot;dateOfBirth&quot;: &quot;2022-09-28T12:51:19.260+00:00&quot;,&#xd;
    &quot;emailAddress&quot;: &quot;string&quot;,&#xd;
    &quot;employerName&quot;: &quot;string&quot;,&#xd;
    &quot;gender&quot;: &quot;m&quot;,&#xd;
    &quot;idDocument&quot;: [&#xd;
      {&#xd;
        &quot;idType&quot;: &quot;passport&quot;,&#xd;
        &quot;idNumber&quot;: &quot;string&quot;,&#xd;
        &quot;issueDate&quot;: &quot;2022-09-28T12:51:19.260+00:00&quot;,&#xd;
        &quot;expiryDate&quot;: &quot;2022-09-28T12:51:19.260+00:00&quot;,&#xd;
        &quot;issuer&quot;: &quot;string&quot;,&#xd;
        &quot;issuerPlace&quot;: &quot;string&quot;,&#xd;
        &quot;issuerCountry&quot;: &quot;USA&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;nationality&quot;: &quot;USA&quot;,&#xd;
    &quot;occupation&quot;: &quot;string&quot;,&#xd;
    &quot;postalAddress&quot;: {&#xd;
      &quot;addressLine1&quot;: &quot;string&quot;,&#xd;
      &quot;addressLine2&quot;: &quot;string&quot;,&#xd;
      &quot;addressLine3&quot;: &quot;string&quot;,&#xd;
      &quot;city&quot;: &quot;string&quot;,&#xd;
      &quot;stateProvince&quot;: &quot;string&quot;,&#xd;
      &quot;postalCode&quot;: &quot;string&quot;,&#xd;
      &quot;country&quot;: &quot;USA&quot;&#xd;
    },&#xd;
    &quot;subjectName&quot;: {&#xd;
      &quot;title&quot;: &quot;string&quot;,&#xd;
      &quot;firstName&quot;: &quot;string&quot;,&#xd;
      &quot;middleName&quot;: &quot;string&quot;,&#xd;
      &quot;lastName&quot;: &quot;string&quot;,&#xd;
      &quot;nativeName&quot;: &quot;string&quot;&#xd;
    }&#xd;
  },&#xd;
  &quot;servicingIdentity&quot;: &quot;string&quot;,&#xd;
  &quot;requestDate&quot;: &quot;2022-09-28T12:51:19.260+00:00&quot;,&#xd;
  &quot;metadata&quot;: [&#xd;
    {&#xd;
      &quot;key&quot;: &quot;string&quot;,&#xd;
      &quot;value&quot;: &quot;string&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;creditParty&quot;: [&#xd;
    {&#xd;
      &quot;key&quot;: &quot;msisdn&quot;,&#xd;
      &quot;value&quot;: &quot;+449999112&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;debitParty&quot;: [&#xd;
    {&#xd;
      &quot;key&quot;: &quot;msisdn&quot;,&#xd;
      &quot;value&quot;: &quot;+449999999&quot;&#xd;
    }&#xd;
  ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://channel.local/channel/gsma/deposit</stringProp>
                  </elementProp>
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">{{PayeeTenantName}}</stringProp>
                  </elementProp>
                  <elementProp name="X-CorrelationID" elementType="Header">
                    <stringProp name="Header.name">X-CorrelationID</stringProp>
                    <stringProp name="Header.value">12345</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">54cb6424-fb84-403f-b5e3-db8bf7091e18</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.41.2</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="GSMA Stub- Check API availability" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GSMA Stub- Check API availability-48" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">channel-gsma.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/heartbeat/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">094c7d3c-2411-4a5b-8ad2-fc8ea2903960</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.41.2</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GSMA Stub- Check API availability-49" enabled="false">
              <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
              <stringProp name="HTTPSampler.domain">channel-gsma.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/heartbeat</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://channel-gsma.local/heartbeat/</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">094c7d3c-2411-4a5b-8ad2-fc8ea2903960</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.41.2</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="GSMA Stub- View Specific Statement" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GSMA Stub- View Specific Statement-50" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">channel-gsma.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/statemententries/%7B%7BtransactionReference%7D%7D</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="X-Account-Holding-Institution-Identifier-Type" elementType="Header">
                    <stringProp name="Header.name">X-Account-Holding-Institution-Identifier-Type</stringProp>
                    <stringProp name="Header.value">&lt;string&gt;</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">ffdc28ae-f34c-4695-8ab2-0e558e08608f</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="X-User-Bearer" elementType="Header">
                    <stringProp name="Header.name">X-User-Bearer</stringProp>
                    <stringProp name="Header.value">&lt;string&gt;</stringProp>
                  </elementProp>
                  <elementProp name="X-Account-Holding-Institution-Identifier" elementType="Header">
                    <stringProp name="Header.name">X-Account-Holding-Institution-Identifier</stringProp>
                    <stringProp name="Header.value">&lt;string&gt;</stringProp>
                  </elementProp>
                  <elementProp name="X-Client-Id" elementType="Header">
                    <stringProp name="Header.name">X-Client-Id</stringProp>
                    <stringProp name="Header.value">&lt;string&gt;</stringProp>
                  </elementProp>
                  <elementProp name="X-API-Key" elementType="Header">
                    <stringProp name="Header.name">X-API-Key</stringProp>
                    <stringProp name="Header.value">&lt;string&gt;</stringProp>
                  </elementProp>
                  <elementProp name="X-Content-Hash" elementType="Header">
                    <stringProp name="Header.name">X-Content-Hash</stringProp>
                    <stringProp name="Header.value">&lt;string&gt;</stringProp>
                  </elementProp>
                  <elementProp name="X-User-Credential-2" elementType="Header">
                    <stringProp name="Header.name">X-User-Credential-2</stringProp>
                    <stringProp name="Header.value">&lt;string&gt;</stringProp>
                  </elementProp>
                  <elementProp name="X-Channel" elementType="Header">
                    <stringProp name="Header.name">X-Channel</stringProp>
                    <stringProp name="Header.value">&lt;string&gt;</stringProp>
                  </elementProp>
                  <elementProp name="X-User-Credential-1" elementType="Header">
                    <stringProp name="Header.name">X-User-Credential-1</stringProp>
                    <stringProp name="Header.value">&lt;string&gt;</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.41.2</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GSMA Stub- View Specific Statement-51" enabled="false">
              <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
              <stringProp name="HTTPSampler.domain">channel-gsma.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/statemententries/%7B%7BtransactionReference%7D%7D</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://channel-gsma.local/statemententries/%7B%7BtransactionReference%7D%7D</stringProp>
                  </elementProp>
                  <elementProp name="X-Account-Holding-Institution-Identifier-Type" elementType="Header">
                    <stringProp name="Header.name">X-Account-Holding-Institution-Identifier-Type</stringProp>
                    <stringProp name="Header.value">&lt;string&gt;</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">ffdc28ae-f34c-4695-8ab2-0e558e08608f</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="X-User-Bearer" elementType="Header">
                    <stringProp name="Header.name">X-User-Bearer</stringProp>
                    <stringProp name="Header.value">&lt;string&gt;</stringProp>
                  </elementProp>
                  <elementProp name="X-Account-Holding-Institution-Identifier" elementType="Header">
                    <stringProp name="Header.name">X-Account-Holding-Institution-Identifier</stringProp>
                    <stringProp name="Header.value">&lt;string&gt;</stringProp>
                  </elementProp>
                  <elementProp name="X-Client-Id" elementType="Header">
                    <stringProp name="Header.name">X-Client-Id</stringProp>
                    <stringProp name="Header.value">&lt;string&gt;</stringProp>
                  </elementProp>
                  <elementProp name="X-API-Key" elementType="Header">
                    <stringProp name="Header.name">X-API-Key</stringProp>
                    <stringProp name="Header.value">&lt;string&gt;</stringProp>
                  </elementProp>
                  <elementProp name="X-Content-Hash" elementType="Header">
                    <stringProp name="Header.name">X-Content-Hash</stringProp>
                    <stringProp name="Header.value">&lt;string&gt;</stringProp>
                  </elementProp>
                  <elementProp name="X-User-Credential-2" elementType="Header">
                    <stringProp name="Header.name">X-User-Credential-2</stringProp>
                    <stringProp name="Header.value">&lt;string&gt;</stringProp>
                  </elementProp>
                  <elementProp name="X-Channel" elementType="Header">
                    <stringProp name="Header.name">X-Channel</stringProp>
                    <stringProp name="Header.value">&lt;string&gt;</stringProp>
                  </elementProp>
                  <elementProp name="X-User-Credential-1" elementType="Header">
                    <stringProp name="Header.name">X-User-Credential-1</stringProp>
                    <stringProp name="Header.value">&lt;string&gt;</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.41.2</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="GSMA Stub- Create a bill Payment" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GSMA Stub- Create a bill Payment-52" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">channel-gsma.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/bills/%7B%7BbillReference%7D%7D/payments</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;serviceProviderPaymentReference&quot;: &quot;string&quot;,&#xd;
  &quot;requestingOrganisationTransactionReference&quot;: &quot;string&quot;,&#xd;
  &quot;paymentType&quot;: &quot;partialpayment&quot;,&#xd;
  &quot;amountPaid&quot;: &quot;15.21&quot;,&#xd;
  &quot;currency&quot;: &quot;AED&quot;,&#xd;
  &quot;customerReference&quot;: &quot;string&quot;,&#xd;
  &quot;requestingOrganisation&quot;: &quot;string&quot;,&#xd;
  &quot;supplementaryBillReferenceDetails&quot;: [&#xd;
    {&#xd;
      &quot;paymentReferenceType&quot;: &quot;string&quot;,&#xd;
      &quot;paymentReferenceValue&quot;: &quot;string&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;requestDate&quot;: &quot;2022-09-29T07:45:19.744Z&quot;,&#xd;
  &quot;customData&quot;: [&#xd;
    {&#xd;
      &quot;key&quot;: &quot;string&quot;,&#xd;
      &quot;value&quot;: &quot;string&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;metadata&quot;: [&#xd;
    {&#xd;
      &quot;key&quot;: &quot;string&quot;,&#xd;
      &quot;value&quot;: &quot;string&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;paidAmount&quot;: &quot;15.21&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="X-Account-Holding-Institution-Identifier-Type" elementType="Header">
                    <stringProp name="Header.name">X-Account-Holding-Institution-Identifier-Type</stringProp>
                    <stringProp name="Header.value">&lt;string&gt;</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">ba7c4b93-f387-4161-9ed6-4bbd60cb4286</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="X-User-Bearer" elementType="Header">
                    <stringProp name="Header.name">X-User-Bearer</stringProp>
                    <stringProp name="Header.value">&lt;string&gt;</stringProp>
                  </elementProp>
                  <elementProp name="X-Callback-URL" elementType="Header">
                    <stringProp name="Header.name">X-Callback-URL</stringProp>
                    <stringProp name="Header.value">&lt;uri&gt;</stringProp>
                  </elementProp>
                  <elementProp name="X-Account-Holding-Institution-Identifier" elementType="Header">
                    <stringProp name="Header.name">X-Account-Holding-Institution-Identifier</stringProp>
                    <stringProp name="Header.value">&lt;string&gt;</stringProp>
                  </elementProp>
                  <elementProp name="X-CorrelationID" elementType="Header">
                    <stringProp name="Header.name">X-CorrelationID</stringProp>
                    <stringProp name="Header.value">&lt;string&gt;</stringProp>
                  </elementProp>
                  <elementProp name="X-Client-Id" elementType="Header">
                    <stringProp name="Header.name">X-Client-Id</stringProp>
                    <stringProp name="Header.value">&lt;string&gt;</stringProp>
                  </elementProp>
                  <elementProp name="X-API-Key" elementType="Header">
                    <stringProp name="Header.name">X-API-Key</stringProp>
                    <stringProp name="Header.value">&lt;string&gt;</stringProp>
                  </elementProp>
                  <elementProp name="X-Content-Hash" elementType="Header">
                    <stringProp name="Header.name">X-Content-Hash</stringProp>
                    <stringProp name="Header.value">&lt;string&gt;</stringProp>
                  </elementProp>
                  <elementProp name="X-User-Credential-2" elementType="Header">
                    <stringProp name="Header.name">X-User-Credential-2</stringProp>
                    <stringProp name="Header.value">&lt;string&gt;</stringProp>
                  </elementProp>
                  <elementProp name="X-Channel" elementType="Header">
                    <stringProp name="Header.name">X-Channel</stringProp>
                    <stringProp name="Header.value">&lt;string&gt;</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="X-User-Credential-1" elementType="Header">
                    <stringProp name="Header.name">X-User-Credential-1</stringProp>
                    <stringProp name="Header.value">&lt;string&gt;</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.41.2</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GSMA Stub- Create a bill Payment-53" enabled="false">
              <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
              <stringProp name="HTTPSampler.domain">channel-gsma.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/bills/%7B%7BbillReference%7D%7D/payments</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;serviceProviderPaymentReference&quot;: &quot;string&quot;,&#xd;
  &quot;requestingOrganisationTransactionReference&quot;: &quot;string&quot;,&#xd;
  &quot;paymentType&quot;: &quot;partialpayment&quot;,&#xd;
  &quot;amountPaid&quot;: &quot;15.21&quot;,&#xd;
  &quot;currency&quot;: &quot;AED&quot;,&#xd;
  &quot;customerReference&quot;: &quot;string&quot;,&#xd;
  &quot;requestingOrganisation&quot;: &quot;string&quot;,&#xd;
  &quot;supplementaryBillReferenceDetails&quot;: [&#xd;
    {&#xd;
      &quot;paymentReferenceType&quot;: &quot;string&quot;,&#xd;
      &quot;paymentReferenceValue&quot;: &quot;string&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;requestDate&quot;: &quot;2022-09-29T07:45:19.744Z&quot;,&#xd;
  &quot;customData&quot;: [&#xd;
    {&#xd;
      &quot;key&quot;: &quot;string&quot;,&#xd;
      &quot;value&quot;: &quot;string&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;metadata&quot;: [&#xd;
    {&#xd;
      &quot;key&quot;: &quot;string&quot;,&#xd;
      &quot;value&quot;: &quot;string&quot;&#xd;
    }&#xd;
  ],&#xd;
  &quot;paidAmount&quot;: &quot;15.21&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://channel-gsma.local/bills/%7B%7BbillReference%7D%7D/payments</stringProp>
                  </elementProp>
                  <elementProp name="X-Account-Holding-Institution-Identifier-Type" elementType="Header">
                    <stringProp name="Header.name">X-Account-Holding-Institution-Identifier-Type</stringProp>
                    <stringProp name="Header.value">&lt;string&gt;</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">ba7c4b93-f387-4161-9ed6-4bbd60cb4286</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="X-User-Bearer" elementType="Header">
                    <stringProp name="Header.name">X-User-Bearer</stringProp>
                    <stringProp name="Header.value">&lt;string&gt;</stringProp>
                  </elementProp>
                  <elementProp name="X-Callback-URL" elementType="Header">
                    <stringProp name="Header.name">X-Callback-URL</stringProp>
                    <stringProp name="Header.value">&lt;uri&gt;</stringProp>
                  </elementProp>
                  <elementProp name="X-Account-Holding-Institution-Identifier" elementType="Header">
                    <stringProp name="Header.name">X-Account-Holding-Institution-Identifier</stringProp>
                    <stringProp name="Header.value">&lt;string&gt;</stringProp>
                  </elementProp>
                  <elementProp name="X-CorrelationID" elementType="Header">
                    <stringProp name="Header.name">X-CorrelationID</stringProp>
                    <stringProp name="Header.value">&lt;string&gt;</stringProp>
                  </elementProp>
                  <elementProp name="X-Client-Id" elementType="Header">
                    <stringProp name="Header.name">X-Client-Id</stringProp>
                    <stringProp name="Header.value">&lt;string&gt;</stringProp>
                  </elementProp>
                  <elementProp name="X-API-Key" elementType="Header">
                    <stringProp name="Header.name">X-API-Key</stringProp>
                    <stringProp name="Header.value">&lt;string&gt;</stringProp>
                  </elementProp>
                  <elementProp name="X-Content-Hash" elementType="Header">
                    <stringProp name="Header.name">X-Content-Hash</stringProp>
                    <stringProp name="Header.value">&lt;string&gt;</stringProp>
                  </elementProp>
                  <elementProp name="X-User-Credential-2" elementType="Header">
                    <stringProp name="Header.name">X-User-Credential-2</stringProp>
                    <stringProp name="Header.value">&lt;string&gt;</stringProp>
                  </elementProp>
                  <elementProp name="X-Channel" elementType="Header">
                    <stringProp name="Header.name">X-Channel</stringProp>
                    <stringProp name="Header.value">&lt;string&gt;</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="X-User-Credential-1" elementType="Header">
                    <stringProp name="Header.name">X-User-Credential-1</stringProp>
                    <stringProp name="Header.value">&lt;string&gt;</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.41.2</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="GSMA Stub- View a Response" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GSMA Stub- View a Response-54" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">channel-gsma.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/responses/12345</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">61eac0a6-8b85-44f7-9546-9e8f3a449c19</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.41.2</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GSMA Stub- View a Response-55" enabled="false">
              <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
              <stringProp name="HTTPSampler.domain">channel-gsma.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/responses/12345</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://channel-gsma.local/responses/12345</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">61eac0a6-8b85-44f7-9546-9e8f3a449c19</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.41.2</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Mobile Money APIs" enabled="false">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <RecordingController guiclass="RecordController" testclass="RecordingController" testname="Recording Controller" enabled="true"/>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Bilateral Money Transfer" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Bilateral Money Transfer-61" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">channel.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/channel/%7B%7Bprovider%7D%7D/transfer</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;payer&quot;: {&#xd;
        &quot;partyIdInfo&quot;: {&#xd;
            &quot;partyIdType&quot;: &quot;MSISDN&quot;,&#xd;
            &quot;partyIdentifier&quot;: &quot;+449999999&quot;&#xd;
        }&#xd;
    },&#xd;
    &quot;payee&quot;: {&#xd;
        &quot;partyIdInfo&quot;: {&#xd;
            &quot;partyIdType&quot;: &quot;MSISDN&quot;,&#xd;
            &quot;partyIdentifier&quot;: &quot;+449999112&quot;&#xd;
        }&#xd;
    },&#xd;
    &quot;amount&quot;: {&#xd;
        &quot;amount&quot;: 6,&#xd;
        &quot;currency&quot;: &quot;TZS&quot;&#xd;
    }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">tn05</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">76c6bb14-6f0f-400c-8339-5a6ea2cd8766</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="MerchantPay" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MerchantPay-59" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">channel.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/channel/%7B%7Bprovider%7D%7D/merchantpay</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;payer&quot;: {&#xd;
        &quot;partyIdInfo&quot;: {&#xd;
            &quot;partyIdType&quot;: &quot;MSISDN&quot;,&#xd;
            &quot;partyIdentifier&quot;: &quot;+449999999&quot;&#xd;
        }&#xd;
    },&#xd;
    &quot;payee&quot;: {&#xd;
        &quot;partyIdInfo&quot;: {&#xd;
            &quot;partyIdType&quot;: &quot;MSISDN&quot;,&#xd;
            &quot;partyIdentifier&quot;: &quot;+449999112&quot;&#xd;
        }&#xd;
    },&#xd;
    &quot;amount&quot;: {&#xd;
        &quot;amount&quot;: 6,&#xd;
        &quot;currency&quot;: &quot;TZS&quot;&#xd;
    }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">tn05</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">f977707c-b977-482b-9fa5-e833b259af11</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="MetchantPay with AuthCode" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MetchantPay with AuthCode-62" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">channel.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/channel/%7B%7Bprovider%7D%7D/merchantpay/authcode/%7B%7BauthorizationCode%7D%7D</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;payer&quot;: {&#xd;
        &quot;partyIdInfo&quot;: {&#xd;
            &quot;partyIdType&quot;: &quot;MSISDN&quot;,&#xd;
            &quot;partyIdentifier&quot;: &quot;+449999999&quot;&#xd;
        }&#xd;
    },&#xd;
    &quot;payee&quot;: {&#xd;
        &quot;partyIdInfo&quot;: {&#xd;
            &quot;partyIdType&quot;: &quot;MSISDN&quot;,&#xd;
            &quot;partyIdentifier&quot;: &quot;+449999112&quot;&#xd;
        }&#xd;
    },&#xd;
    &quot;amount&quot;: {&#xd;
        &quot;amount&quot;: 6,&#xd;
        &quot;currency&quot;: &quot;TZS&quot;&#xd;
    }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">tn05</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">a7de37be-edf8-408d-9ae9-345d69e76da9</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="International Transfer" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="International Transfer-63" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">channel.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/channel/%7B%7Bprovider%7D%7D/inttransfer</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;amount&quot;: &quot;54&quot;,&#xd;
    &quot;type&quot;: &quot;transfer&quot;,&#xd;
    &quot;requestingLei&quot;: &quot;ibank-usa&quot;, &#xd;
    &quot;receivingLei&quot;: &quot;ibank-india&quot;,&#xd;
    &quot;creditParty&quot;: [&#xd;
        {&#xd;
            &quot;key&quot;: &quot;msisdn&quot;,&#xd;
            &quot;value&quot;: &quot;919900878571&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;currency&quot;: &quot;USD&quot;,&#xd;
    &quot;debitParty&quot;: [&#xd;
        {&#xd;
            &quot;key&quot;: &quot;msisdn&quot;,&#xd;
            &quot;value&quot;: &quot;7543010&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;internationalTransferInformation&quot;:{&#xd;
                    &quot;originCountry&quot;:&quot;US&quot;,&#xd;
                    &quot;receivingCountry&quot;:&quot;IN&quot;,&#xd;
                    &quot;receivingCurrency&quot;:&quot;INR&quot;,&#xd;
                    &quot;currencyPair&quot;:&quot;INR/USD&quot;&#xd;
        }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">ibank-usa</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">2b296a14-c085-4c72-929c-57def13a87e6</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Deposit Money" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Deposit Money-64" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">channel.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/channel/%7B%7Bprovider%7D%7D/deposit</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;amount&quot;: &quot;304&quot;,&#xd;
    &quot;type&quot;: &quot;transfer&quot;,&#xd;
    &quot;creditParty&quot;: [&#xd;
        {&#xd;
            &quot;key&quot;: &quot;msisdn&quot;,&#xd;
            &quot;value&quot;: &quot;+919900878571&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;currency&quot;: &quot;USD&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">ibank-usa</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">1652a7a4-806b-4467-b24c-af66d77f00e0</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Bulk APIs" enabled="false">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <RecordingController guiclass="RecordController" testclass="RecordingController" testname="Recording Controller" enabled="true"/>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Bulk transfer older" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Bulk transfer older-28" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">bulk-connector.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/channel/bulk/transfer/ph-ee-bulk-demo-8.csv</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">rhino</stringProp>
                  </elementProp>
                  <elementProp name="X-CorrelationID" elementType="Header">
                    <stringProp name="Header.name">X-CorrelationID</stringProp>
                    <stringProp name="Header.value">12345</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">65fcb18b-ecc5-4325-8339-4743c4257e0e</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Batch Transaction" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Batch Transaction-29" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">bulk-connector.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/batchtransactions</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Purpose" elementType="Header">
                    <stringProp name="Header.name">Purpose</stringProp>
                    <stringProp name="Header.value">test payment</stringProp>
                  </elementProp>
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">rhino</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">c9719591-8016-4833-a556-550826915001</stringProp>
                  </elementProp>
                  <elementProp name="X-PayeeDFSP-ID" elementType="Header">
                    <stringProp name="Header.name">X-PayeeDFSP-ID</stringProp>
                    <stringProp name="Header.value">{{payeeDFSPId}}</stringProp>
                  </elementProp>
                  <elementProp name="type" elementType="Header">
                    <stringProp name="Header.name">type</stringProp>
                    <stringProp name="Header.value">csv</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="filename" elementType="Header">
                    <stringProp name="Header.name">filename</stringProp>
                    <stringProp name="Header.value">ph-ee-bulk-demo-7.csv</stringProp>
                  </elementProp>
                  <elementProp name="X-CorrelationID" elementType="Header">
                    <stringProp name="Header.name">X-CorrelationID</stringProp>
                    <stringProp name="Header.value">1234</stringProp>
                  </elementProp>
                  <elementProp name="X-Signature" elementType="Header">
                    <stringProp name="Header.name">X-Signature</stringProp>
                    <stringProp name="Header.value">TvahZAr7Mruj4IuSDqDmZIT+3FxtbgloQENlihURwIA4v2C71aGMNeHf86gh5UogkjW+cGuVBDp/wxVJAcBF9UTl3izi0kyc/ukDtaDlBZlMoymTFWF7AldXZ40nNiKOzCIgCmOi/Xdq+D2LQTTHAJdH9Zn0VJrynJv31UlctL6P+ToALKO92k8vbuhihnLRSyhl63wDw5v+Ww+q+dAoE56y7XUt1ypOZEQrBV80QqF+yrKWKmCgtWZSMD3H6tm2AXrUbKeIProm8Q2J++AHGRpVwW85O6cTAL6U3RjIqa7upG9ANcoiHluAJ7VvtyA4LA8i6lbeNkgJAyHHw3iISg==</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Bulk Transfer" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Bulk Transfer-31" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">bulk-connector.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/batchtransactions</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">[&#xd;
    {&#xd;
        &quot;creditParty&quot;: [&#xd;
            {&#xd;
                &quot;key&quot;: &quot;msisdn&quot;,&#xd;
                &quot;value&quot;: &quot;8837461856&quot;&#xd;
            }&#xd;
        ],&#xd;
        &quot;debitParty&quot;: [&#xd;
            {&#xd;
                &quot;key&quot;: &quot;accountnumber&quot;,&#xd;
                &quot;value&quot;: &quot;003001003874120160&quot;&#xd;
            }&#xd;
        ],&#xd;
        &quot;subType&quot;: &quot;SLCB&quot;,&#xd;
        &quot;amount&quot;: &quot;820.00&quot;,&#xd;
        &quot;currency&quot;: &quot;RWF&quot;,&#xd;
        &quot;descriptionText&quot;: &quot;Test Payment&quot;&#xd;
    },&#xd;
    {&#xd;
        &quot;creditParty&quot;: [&#xd;
            {&#xd;
                &quot;key&quot;: &quot;msisdn&quot;,&#xd;
                &quot;value&quot;: &quot;32131461856&quot;&#xd;
            }&#xd;
        ],&#xd;
        &quot;debitParty&quot;: [&#xd;
            {&#xd;
                &quot;key&quot;: &quot;accountnumber&quot;,&#xd;
                &quot;value&quot;: &quot;21314556003874120160&quot;&#xd;
            }&#xd;
        ],&#xd;
        &quot;subType&quot;: &quot;SLCB&quot;,&#xd;
        &quot;amount&quot;: &quot;20.00&quot;,&#xd;
        &quot;currency&quot;: &quot;RWF&quot;,&#xd;
        &quot;descriptionText&quot;: &quot;Test Payment&quot;&#xd;
    }&#xd;
]</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Purpose" elementType="Header">
                    <stringProp name="Header.name">Purpose</stringProp>
                    <stringProp name="Header.value">test payment</stringProp>
                  </elementProp>
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">rhino</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">1ba5c123-37c2-4c0b-b33c-cf5240181b2a</stringProp>
                  </elementProp>
                  <elementProp name="type" elementType="Header">
                    <stringProp name="Header.name">type</stringProp>
                    <stringProp name="Header.value">raw</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="X-CorrelationID" elementType="Header">
                    <stringProp name="Header.name">X-CorrelationID</stringProp>
                    <stringProp name="Header.value">1234</stringProp>
                  </elementProp>
                  <elementProp name="X-Signature" elementType="Header">
                    <stringProp name="Header.name">X-Signature</stringProp>
                    <stringProp name="Header.value">TvahZAr7Mruj4IuSDqDmZIT+3FxtbgloQENlihURwIA4v2C71aGMNeHf86gh5UogkjW+cGuVBDp/wxVJAcBF9UTl3izi0kyc/ukDtaDlBZlMoymTFWF7AldXZ40nNiKOzCIgCmOi/Xdq+D2LQTTHAJdH9Zn0VJrynJv31UlctL6P+ToALKO92k8vbuhihnLRSyhl63wDw5v+Ww+q+dAoE56y7XUt1ypOZEQrBV80QqF+yrKWKmCgtWZSMD3H6tm2AXrUbKeIProm8Q2J++AHGRpVwW85O6cTAL6U3RjIqa7upG9ANcoiHluAJ7VvtyA4LA8i6lbeNkgJAyHHw3iISg==</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Bulk Transfer-32" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">bulk-connector.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/bulk/transfer/742caccd-58d4-4c7d-bc5a-7b030c8b3afa/ph-ee-bulk-demo-6.csv</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="X-Callback-URL" elementType="Header">
                    <stringProp name="Header.name">X-Callback-URL</stringProp>
                    <stringProp name="Header.value">bulk-connector.local/simulate</stringProp>
                  </elementProp>
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">rhino</stringProp>
                  </elementProp>
                  <elementProp name="X-CorrelationID" elementType="Header">
                    <stringProp name="Header.name">X-CorrelationID</stringProp>
                    <stringProp name="Header.value">12345</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">95fbb4b3-03b2-4706-8d11-cae768ebbe88</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Bulk Account Lookup" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Bulk Account Lookup-33" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">channel.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/channel/bulk/lookup</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
              <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="requestId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">requestId</stringProp>
                    <stringProp name="Argument.value">3a4dfab5-0f4f-4e78-b6b5-1aff3859d4e8</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="purpose" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">purpose</stringProp>
                    <stringProp name="Argument.value">iliydufkgiku</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">rhino</stringProp>
                  </elementProp>
                  <elementProp name="X-CorrelationID" elementType="Header">
                    <stringProp name="Header.name">X-CorrelationID</stringProp>
                    <stringProp name="Header.value">12345</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">9d2174ed-762e-4df6-855b-f880dfa85164</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Batch Summary" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Batch Summary-34" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">ops-bk.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/v1/batch</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="batchId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">batchId</stringProp>
                    <stringProp name="Argument.value">null</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="X-CorrelationID" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">X-CorrelationID</stringProp>
                    <stringProp name="Argument.value">12345</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiaWRlbnRpdHktcHJvdmlkZXIiLCJyaGlubyJdLCJ1c2VyX25hbWUiOiJtaWZvcyIsInNjb3BlIjpbImlkZW50aXR5Il0sImV4cCI6MTcyNTUyOTYzMCwiYXV0aG9yaXRpZXMiOlsiUkVGVU5EIiwiQUxMX0ZVTkNUSU9OUyJdLCJqdGkiOiJZckJlQlNJRTVLQ1hkTDdsbkZ6Z1dNVExNTDQ9IiwiY2xpZW50X2lkIjoiY2xpZW50In0.z3G3AnlXIFanzVa22w1fjWhIn0DYkhYmJqsy0WbhQI2xsoLqWcai15pkJQaaY5m0QfR_Rp-tmc9vRiX9i93kdSs20gTTnwmQVSwJviQJ67k_PU2CgFDkVMSBwib-LSmj1MNdSzYYBisD6Ix3_suWX5zzNNBfqEOZpUpQOQhDgJSvXGYJ7cCRw0fWRHITTCq7hM0mfbC4Ojg67Ku_RXycYCvrXp65w1wdPBK5MrAS3ynbP63IABivnPLPtrgB1VJx10V2g524hyuLoEAyUnzhHK1PBPuV_AmFY0dsbe_7q460xTt6K30D34cJ6L1E7dlhxjnCF2Rli07QyKB5L0P2Zg</stringProp>
                  </elementProp>
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">rhino</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">2c6c2944-297a-45b8-b06f-ced1e8a0cc65</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Batch Details" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Batch Details-35" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">ops-bk.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/v1/batch/detail</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="batchId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">batchId</stringProp>
                    <stringProp name="Argument.value">null</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="pageSize" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">pageSize</stringProp>
                    <stringProp name="Argument.value">{{pageSize}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="X-CorrelationID" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">X-CorrelationID</stringProp>
                    <stringProp name="Argument.value">12345</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiaWRlbnRpdHktcHJvdmlkZXIiLCJyaGlubyJdLCJ1c2VyX25hbWUiOiJtaWZvcyIsInNjb3BlIjpbImlkZW50aXR5Il0sImV4cCI6MTcyNTUyOTYzMCwiYXV0aG9yaXRpZXMiOlsiUkVGVU5EIiwiQUxMX0ZVTkNUSU9OUyJdLCJqdGkiOiJZckJlQlNJRTVLQ1hkTDdsbkZ6Z1dNVExNTDQ9IiwiY2xpZW50X2lkIjoiY2xpZW50In0.z3G3AnlXIFanzVa22w1fjWhIn0DYkhYmJqsy0WbhQI2xsoLqWcai15pkJQaaY5m0QfR_Rp-tmc9vRiX9i93kdSs20gTTnwmQVSwJviQJ67k_PU2CgFDkVMSBwib-LSmj1MNdSzYYBisD6Ix3_suWX5zzNNBfqEOZpUpQOQhDgJSvXGYJ7cCRw0fWRHITTCq7hM0mfbC4Ojg67Ku_RXycYCvrXp65w1wdPBK5MrAS3ynbP63IABivnPLPtrgB1VJx10V2g524hyuLoEAyUnzhHK1PBPuV_AmFY0dsbe_7q460xTt6K30D34cJ6L1E7dlhxjnCF2Rli07QyKB5L0P2Zg</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://localhost:4200/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">rhino</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">0de1fc3d-2a72-4978-ab92-2820c339d699</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">http://localhost:4200</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:90.0) Gecko/20100101 Firefox/90.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Batch Lookup Details" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Batch Lookup Details-36" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">ops-bk.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/v1/batch/detail</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="batchId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">batchId</stringProp>
                    <stringProp name="Argument.value">null</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="pageNo" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">pageNo</stringProp>
                    <stringProp name="Argument.value">{{pageNo}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="pageSize" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">pageSize</stringProp>
                    <stringProp name="Argument.value">{{pageSize}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="status" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">status</stringProp>
                    <stringProp name="Argument.value">{{status}}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="X-CorrelationID" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">X-CorrelationID</stringProp>
                    <stringProp name="Argument.value">12345</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiaWRlbnRpdHktcHJvdmlkZXIiLCJyaGlubyJdLCJ1c2VyX25hbWUiOiJtaWZvcyIsInNjb3BlIjpbImlkZW50aXR5Il0sImV4cCI6MTcyNTUyOTYzMCwiYXV0aG9yaXRpZXMiOlsiUkVGVU5EIiwiQUxMX0ZVTkNUSU9OUyJdLCJqdGkiOiJZckJlQlNJRTVLQ1hkTDdsbkZ6Z1dNVExNTDQ9IiwiY2xpZW50X2lkIjoiY2xpZW50In0.z3G3AnlXIFanzVa22w1fjWhIn0DYkhYmJqsy0WbhQI2xsoLqWcai15pkJQaaY5m0QfR_Rp-tmc9vRiX9i93kdSs20gTTnwmQVSwJviQJ67k_PU2CgFDkVMSBwib-LSmj1MNdSzYYBisD6Ix3_suWX5zzNNBfqEOZpUpQOQhDgJSvXGYJ7cCRw0fWRHITTCq7hM0mfbC4Ojg67Ku_RXycYCvrXp65w1wdPBK5MrAS3ynbP63IABivnPLPtrgB1VJx10V2g524hyuLoEAyUnzhHK1PBPuV_AmFY0dsbe_7q460xTt6K30D34cJ6L1E7dlhxjnCF2Rli07QyKB5L0P2Zg</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://localhost:4200/</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">rhino</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">4e745eef-cd1b-43d6-bf79-c1f2007f22d3</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">http://localhost:4200</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:90.0) Gecko/20100101 Firefox/90.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Get All Batches" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get All Batches-37" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">ops-bk.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/v1/batches</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="page" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">page</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="size" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">size</stringProp>
                    <stringProp name="Argument.value">10</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sortedBy" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">sortedBy</stringProp>
                    <stringProp name="Argument.value">requestFile</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="sortedOrder" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">sortedOrder</stringProp>
                    <stringProp name="Argument.value">asc</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="X-CorrelationID" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">X-CorrelationID</stringProp>
                    <stringProp name="Argument.value">12345</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOlsiaWRlbnRpdHktcHJvdmlkZXIiLCJyaGlubyJdLCJ1c2VyX25hbWUiOiJtaWZvcyIsInNjb3BlIjpbImlkZW50aXR5Il0sImV4cCI6MTcyNTUyOTYzMCwiYXV0aG9yaXRpZXMiOlsiUkVGVU5EIiwiQUxMX0ZVTkNUSU9OUyJdLCJqdGkiOiJZckJlQlNJRTVLQ1hkTDdsbkZ6Z1dNVExNTDQ9IiwiY2xpZW50X2lkIjoiY2xpZW50In0.z3G3AnlXIFanzVa22w1fjWhIn0DYkhYmJqsy0WbhQI2xsoLqWcai15pkJQaaY5m0QfR_Rp-tmc9vRiX9i93kdSs20gTTnwmQVSwJviQJ67k_PU2CgFDkVMSBwib-LSmj1MNdSzYYBisD6Ix3_suWX5zzNNBfqEOZpUpQOQhDgJSvXGYJ7cCRw0fWRHITTCq7hM0mfbC4Ojg67Ku_RXycYCvrXp65w1wdPBK5MrAS3ynbP63IABivnPLPtrgB1VJx10V2g524hyuLoEAyUnzhHK1PBPuV_AmFY0dsbe_7q460xTt6K30D34cJ6L1E7dlhxjnCF2Rli07QyKB5L0P2Zg</stringProp>
                  </elementProp>
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">rhino</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">2c54d24a-c477-474b-a652-d2d5a1559688</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Batch Payment Details" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Batch Payment Details-38" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">ops-bk.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/api/v1/batches/null</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="associations" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">associations</stringProp>
                    <stringProp name="Argument.value">all</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">rhino</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">a3151384-f812-42a6-8101-b2c759b26b64</stringProp>
                  </elementProp>
                  <elementProp name="X-Correlation-ID" elementType="Header">
                    <stringProp name="Header.name">X-Correlation-ID</stringProp>
                    <stringProp name="Header.value">12345</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Bulk Transactions JSON" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Bulk Transactions JSON-1" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">bulk-connector.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/batchtransactions</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">[&#xd;
    {&#xd;
        &quot;creditParty&quot;: [&#xd;
            {&#xd;
                &quot;key&quot;: &quot;msisdn&quot;,&#xd;
                &quot;value&quot;: &quot;8837461856&quot;&#xd;
            }&#xd;
        ],&#xd;
        &quot;debitParty&quot;: [&#xd;
            {&#xd;
                &quot;key&quot;: &quot;accountnumber&quot;,&#xd;
                &quot;value&quot;: &quot;003001003874120160&quot;&#xd;
            }&#xd;
        ],&#xd;
        &quot;subType&quot;: &quot;SLCB&quot;,&#xd;
        &quot;amount&quot;: &quot;820.00&quot;,&#xd;
        &quot;currency&quot;: &quot;RWF&quot;,&#xd;
        &quot;descriptionText&quot;: &quot;Test Payment&quot;&#xd;
    },&#xd;
    {&#xd;
        &quot;creditParty&quot;: [&#xd;
            {&#xd;
                &quot;key&quot;: &quot;msisdn&quot;,&#xd;
                &quot;value&quot;: &quot;32131461856&quot;&#xd;
            }&#xd;
        ],&#xd;
        &quot;debitParty&quot;: [&#xd;
            {&#xd;
                &quot;key&quot;: &quot;accountnumber&quot;,&#xd;
                &quot;value&quot;: &quot;21314556003874120160&quot;&#xd;
            }&#xd;
        ],&#xd;
        &quot;subType&quot;: &quot;SLCB&quot;,&#xd;
        &quot;amount&quot;: &quot;20.00&quot;,&#xd;
        &quot;currency&quot;: &quot;RWF&quot;,&#xd;
        &quot;descriptionText&quot;: &quot;Test Payment&quot;&#xd;
    }&#xd;
]</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Purpose" elementType="Header">
                    <stringProp name="Header.name">Purpose</stringProp>
                    <stringProp name="Header.value">test payment</stringProp>
                  </elementProp>
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">rhino</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">b34b42d2-6696-40a6-b02f-b47ba45b6350</stringProp>
                  </elementProp>
                  <elementProp name="type" elementType="Header">
                    <stringProp name="Header.name">type</stringProp>
                    <stringProp name="Header.value">raw</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="X-CorrelationID" elementType="Header">
                    <stringProp name="Header.name">X-CorrelationID</stringProp>
                    <stringProp name="Header.value">1234</stringProp>
                  </elementProp>
                  <elementProp name="X-Signature" elementType="Header">
                    <stringProp name="Header.name">X-Signature</stringProp>
                    <stringProp name="Header.value">pTd1iTG6K0wkqXsAwO23atDMf24ve3S0LH9D6tzMkc5jQ7zknESerWoKun17gAR8X+cSerAIZ5T6xuWd3AYvRx/nHNintXWCON1optFfmWSYcY7LMkZ0Prn0RUkEhzMKeHf27/DVbgP/A6RwInIKnbd/+jjqG0fjIMYM6r7DZVz76kEUwprWBkThWeKDB5g8Vyb9pdL3KlDWEoTpFYZoxn+R4KRoGEvpNBvtABOmLK22DTEgH1E9xBYIITLV8pLj1dM9Tm9QHhLW3W1t4gtWVkadQ0p4AD7qu91ClhJxDSXqbCaalkKxye3fiX+wGJCghV4iDyA2Os2ggJCWNOWwlw==</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Collection APIs" enabled="false">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <RecordingController guiclass="RecordController" testclass="RecordingController" testname="Recording Controller" enabled="true"/>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Collection request" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Collection request-27" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">channel.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/channel/collection</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;payer&quot;: [&#xd;
        {&#xd;
            &quot;key&quot;: &quot;MSISDN&quot;,&#xd;
            &quot;value&quot;: &quot;254708374149&quot;&#xd;
        },&#xd;
        {&#xd;
            &quot;key&quot;: &quot;ACCOUNTID&quot;,&#xd;
            &quot;value&quot;: &quot;24450523&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;amount&quot;: {&#xd;
        &quot;amount&quot;: &quot;1&quot;,&#xd;
        &quot;currency&quot;: &quot;USD&quot;&#xd;
    },&#xd;
    &quot;transactionType&quot;: {&#xd;
        &quot;scenario&quot;: &quot;MPESA&quot;,&#xd;
        &quot;subScenario&quot;: &quot;BUYGOODS&quot;,&#xd;
        &quot;initiator&quot;: &quot;PAYEE&quot;,&#xd;
        &quot;initiatorType&quot;: &quot;BUSINESS&quot;&#xd;
    }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">rhino</stringProp>
                  </elementProp>
                  <elementProp name="X-CorrelationID" elementType="Header">
                    <stringProp name="Header.name">X-CorrelationID</stringProp>
                    <stringProp name="Header.value">12345</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">4d7e7a24-283b-4d93-8879-5b5da9e7dba3</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Mpesa APIs" enabled="false">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <RecordingController guiclass="RecordController" testclass="RecordingController" testname="Recording Controller" enabled="true"/>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Mpesa buygoods callback" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Mpesa buygoods callback-81" enabled="true">
              <stringProp name="HTTPSampler.domain">{{mpesahostname}}</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/buygoods/callback</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;Body&quot;: {&#xd;
    &quot;stkCallback&quot;: {&#xd;
      &quot;MerchantRequestID&quot;: &quot;61034-2694171-1&quot;,&#xd;
      &quot;CheckoutRequestID&quot;: &quot;ws_CO_101120211333024994&quot;,&#xd;
      &quot;ResultCode&quot;: 1037,&#xd;
      &quot;ResultDesc&quot;: &quot;DS timeout.&quot;&#xd;
    },&#xd;
    &quot;CallbackMetadata&quot;:{&#xd;
         &quot;Item&quot;:[&#xd;
            {&#xd;
               &quot;Name&quot;:&quot;Amount&quot;,&#xd;
               &quot;Value&quot;:10&#xd;
            },&#xd;
            {&#xd;
               &quot;Name&quot;:&quot;MpesaReceiptNumber&quot;,&#xd;
               &quot;Value&quot;:&quot;MRLSJHDH9&quot;&#xd;
            }&#xd;
         ]&#xd;
      }&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">425399e5-cad0-4f48-8e4c-4e99388c74d6</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Notifications APIs" enabled="false">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <RecordingController guiclass="RecordController" testclass="RecordingController" testname="Recording Controller" enabled="true"/>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Notifications Callback" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Notifications Callback-82" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">notifications.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/sms/callback</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">[&#xd;
  {&#xd;
    &quot;id&quot;: &quot;201&quot;,&#xd;
    &quot;externalId&quot;: &quot;SM7b1b75ffa3f5737a&quot;,&#xd;
    &quot;deliveredOnDate&quot;: &quot;2022-01-11&quot;,&#xd;
    &quot;deliveryStatus&quot;: 300,&#xd;
    &quot;hasError&quot;: false,&#xd;
    &quot;errorMessage&quot;: null,&#xd;
    &quot;bridgeId&quot;: 2,&#xd;
    &quot;tenantId&quot;: 1&#xd;
  }&#xd;
]</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="X-CorrelationID" elementType="Header">
                    <stringProp name="Header.name">X-CorrelationID</stringProp>
                    <stringProp name="Header.value">{{clientCorrelationId}}</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">cb28eb06-26bd-45de-9465-e978cadda847</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Send Message to Message Gateway" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Send Message to Message Gateway-84" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">messagegateway.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/sms</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">[&#xd;
  {&#xd;
    &quot;internalId&quot;: &quot;20&quot;,&#xd;
    &quot;mobileNumber&quot;: &quot;+15005550012&quot;,&#xd;
    &quot;message&quot;: &quot;Random Message&quot;,&#xd;
    &quot;providerId&quot;: 2&#xd;
  }&#xd;
]</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Fineract-Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Fineract-Platform-TenantId</stringProp>
                    <stringProp name="Header.value">default</stringProp>
                  </elementProp>
                  <elementProp name="Fineract-Tenant-App-Key" elementType="Header">
                    <stringProp name="Header.name">Fineract-Tenant-App-Key</stringProp>
                    <stringProp name="Header.value">123456543234abdkdkdkd</stringProp>
                  </elementProp>
                  <elementProp name="X-CorrelationID" elementType="Header">
                    <stringProp name="Header.name">X-CorrelationID</stringProp>
                    <stringProp name="Header.value">{{clientCorrelationId}}</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">3d26cdee-9d82-4bb9-bf16-e9400f7909d9</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Message Gateway APIs" enabled="false">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <RecordingController guiclass="RecordController" testclass="RecordingController" testname="Recording Controller" enabled="true"/>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Message Gateway provider callback" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Message Gateway provider callback-90" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">messagegateway.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/telerivet/report/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;contact_id&quot;: &quot;CT190322d3246e0a2f&quot;,&#xd;
  &quot;contact[conversation_status]&quot;: &quot;closed&quot;,&#xd;
  &quot;contact[id]&quot;: &quot;CT190322d3246e0a2f&quot;,&#xd;
  &quot;contact[incoming_message_count]&quot;: 0,&#xd;
  &quot;contact[last_message_id]&quot;: &quot;SM8edad9e1caf03b04&quot;,&#xd;
  &quot;contact[last_message_time]&quot;: 1641306324,&#xd;
  &quot;contact[last_outgoing_message_time]&quot;: 1641306324,&#xd;
  &quot;contact[message_count]&quot;: 17,&#xd;
  &quot;contact[name]&quot;: &quot;+15005550012&quot;,&#xd;
  &quot;contact[outgoing_message_count]&quot;: 17,&#xd;
  &quot;contact[phone_number]&quot;: &quot;+15005550012&quot;,&#xd;
  &quot;contact[project_id]&quot;: &quot;PJ5ff552ce01d2978c&quot;,&#xd;
  &quot;contact[send_blocked]&quot;: 0,&#xd;
  &quot;contact[time_created]&quot;: 1641227864,&#xd;
  &quot;contact[time_updated]&quot;: 1641227864,&#xd;
  &quot;content&quot;: &quot;The transaction for account number:$account for amount:$amount has failed on $date with following transaction id: $transactionid&quot;,&#xd;
  &quot;direction&quot;: &quot;outgoing&quot;,&#xd;
  &quot;error_message&quot;: &quot; &quot;,&#xd;
  &quot;event&quot;: &quot;send_status&quot;,&#xd;
  &quot;from_number&quot;: &quot;555-1212&quot;,&#xd;
  &quot;id&quot;: &quot;SM8edad9e1caf03b04&quot;,&#xd;
  &quot;message_type&quot;: &quot;sms&quot;,&#xd;
  &quot;phone_id&quot;: &quot;PNa2d2c147eb96c34d&quot;,&#xd;
  &quot;priority&quot;: 1,&#xd;
  &quot;project_id&quot;: &quot;PJ5ff552ce01d2978c&quot;,&#xd;
  &quot;secret&quot;: &quot; &quot;,&#xd;
  &quot;simulated&quot;: 1,&#xd;
  &quot;source&quot;: &quot;api&quot;,&#xd;
  &quot;starred&quot;: 0,&#xd;
  &quot;status&quot;: &quot;delivered&quot;,&#xd;
  &quot;time_created&quot;: 1641306324,&#xd;
  &quot;time_sent&quot;: 1641306324,&#xd;
  &quot;time_updated&quot;: 1641306324,&#xd;
  &quot;to_number&quot;: &quot;+15005550012&quot;,&#xd;
  &quot;track_clicks&quot;: 0,&#xd;
  &quot;user_id&quot;: &quot;URfabcdb9eb26ca257&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="X-CorrelationID" elementType="Header">
                    <stringProp name="Header.name">X-CorrelationID</stringProp>
                    <stringProp name="Header.value">{{clientCorrelationId}}</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">d79f0153-16e6-4eee-aee0-290182baa9f0</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Zeebe Operations APIs" enabled="false">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <RecordingController guiclass="RecordController" testclass="RecordingController" testname="Recording Controller" enabled="true"/>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Start a workflow" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Start a workflow-91" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">zeebeops.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/channel/workflow/%7B%7BBpmnProcessId%7D%7D</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;var1&quot;: &quot;val1&quot;,&#xd;
    &quot;var2&quot;: &quot;val2&quot;,&#xd;
    &quot;var3&quot;: &quot;val3&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">96ec7eea-3d6d-4f08-b589-22a1c35a337b</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Upload bpmn" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Upload bpmn-92" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">zeebeops.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/zeebe/upload</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">8a60e248-3cd9-47d1-9c49-34d94b3a511e</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Bulk cancellation of active process" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Bulk cancellation of active process-93" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">zeebeops.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/channel/workflow/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;processId&quot;: [123, 456, 789]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">3e10320a-6711-4d05-b949-1688506ca795</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Check ES health" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Check ES health-94" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">zeebeops.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/es/health</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">b2b46363-ce10-4f50-8366-bdeaa6ba567a</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Get process definition key and name" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get process definition key and name-95" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">zeebeops.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/channel/process</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">86440e6d-ecc8-4937-99a0-257cb5a8de4a</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Cancel a workflow by variable name and value" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cancel a workflow by variable name and value-96" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">zeebeops.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/channel/workflow/cancelbyvalue</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;key&quot;: &quot;initiatorFspId&quot;,&#xd;
    &quot;value&quot;: &quot;\&quot;ibank-usa\&quot;&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">b267c7b7-58d8-4514-bf52-c181934c470a</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Get process variable by process instance key" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get process variable by process instance key-97" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">zeebeops.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/channel/process/variable/%7B%7BProcessInstanceKey%7D%7D</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">38e202d1-b01d-4bd9-9809-dadf42cf2126</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Get list of task that are already executed bu process definition key" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get list of task that are already executed bu process definition key-98" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">zeebeops.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/channel/process/%7B%7BProcessDefinitionKey%7D%7D/task/</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">627835ae-b793-4546-9d86-9f75a7cea61a</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Get process current state and variable by process instance ID" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get process current state and variable by process instance ID-99" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">zeebeops.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/channel/process/%7B%7BProcessInstanceId%7D%7D</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">1fcde1a7-fa34-4dcc-92b0-9e586c03bbda</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Cancel a workflow by workflow instance key" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cancel a workflow by workflow instance key-103" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">zeebeops.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/channel/workflow/%7B%7BWorkflowInstanceKey%7D%7D/cancel</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">423c483b-bfaa-4fd7-8622-a503aa73cc49</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Paybill APIs" enabled="false">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <RecordingController guiclass="RecordController" testclass="RecordingController" testname="Recording Controller" enabled="true"/>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Validation-MPESA-Connector Validate Webhook" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Validation-MPESA-Connector Validate Webhook-101" enabled="true">
              <stringProp name="HTTPSampler.domain">{{mpesahostname}}</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/validation</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
   &quot;TransactionType&quot;:&quot;Pay Bill&quot;,&#xd;
   &quot;TransID&quot;:&quot;8335b60090979AvUefSR&quot;,&#xd;
   &quot;TransTime&quot;:&quot;20191122063845&quot;,&#xd;
   &quot;TransAmount&quot;:&quot;1&quot;,&#xd;
   &quot;BusinessShortCode&quot;:&quot;24322607&quot;,&#xd;
   &quot;BillRefNumber&quot;:&quot;24322607&quot;,&#xd;
   &quot;InvoiceNumber&quot;:&quot;&quot;,&#xd;
   &quot;OrgAccountBalance&quot;:&quot;49197.00&quot;,&#xd;
   &quot;ThirdPartyTransID&quot;:&quot;&quot;,&#xd;
   &quot;MSISDN&quot;:&quot;254797668592&quot;,&#xd;
   &quot;FirstName&quot;:&quot;John&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">757a8f57-1198-4f87-9c23-dfe498452541</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Confirmation-MPESA-Connector Confirmation Webhook" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Confirmation-MPESA-Connector Confirmation Webhook-104" enabled="true">
              <stringProp name="HTTPSampler.domain">{{mpesahostname}}</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/confirmation</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
   &quot;TransactionType&quot;:&quot;Pay Bill&quot;,&#xd;
   &quot;TransID&quot;:&quot;8335b60090979AvUefSR&quot;,&#xd;
   &quot;TransTime&quot;:&quot;20191122063845&quot;,&#xd;
   &quot;TransAmount&quot;:&quot;1&quot;,&#xd;
   &quot;BusinessShortCode&quot;:&quot;24322607&quot;,&#xd;
   &quot;BillRefNumber&quot;:&quot;24322607&quot;,&#xd;
   &quot;InvoiceNumber&quot;:&quot;&quot;,&#xd;
   &quot;OrgAccountBalance&quot;:&quot;49197&quot;,&#xd;
   &quot;ThirdPartyTransID&quot;:&quot;&quot;,&#xd;
   &quot;MSISDN&quot;:&quot;254797668592&quot;,&#xd;
   &quot;FirstName&quot;:&quot;John&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">66679e56-2b97-4da2-a845-7e37dea75855</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Identity Account Mapper">
        <intProp name="ThreadGroup.num_threads">10</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <RecordingController guiclass="RecordController" testclass="RecordingController" testname="Recording Controller" enabled="true"/>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Register Beneficiary" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Register Beneficiary-10" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">identity-mapper.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/beneficiary</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;requestID&quot;: &quot;915251236706&quot;,&#xd;
    &quot;beneficiaries&quot;: [&#xd;
        {&#xd;
            &quot;payeeIdentity&quot;: &quot;27713803912&quot;,&#xd;
            &quot;paymentModality&quot;: &quot;01&quot;,&#xd;
            &quot;financialAddress&quot;: &quot;589&quot;,&#xd;
            &quot;bankingInstitutionCode&quot;: &quot;gorilla&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="X-CallbackURL" elementType="Header">
                    <stringProp name="Header.name">X-CallbackURL</stringProp>
                    <stringProp name="Header.value">http://example.com/callback</stringProp>
                  </elementProp>
                  <elementProp name="X-Registering-Institution-ID" elementType="Header">
                    <stringProp name="Header.name">X-Registering-Institution-ID</stringProp>
                    <stringProp name="Header.value">my-institution-id</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">06712ae1-ef0a-43a2-af00-cfb3fa78d94e</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Update Beneficiary" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update Beneficiary-11" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">identity-mapper.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/beneficiary</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;requestID&quot;: &quot;915251236706&quot;,&#xd;
    &quot;beneficiaries&quot;: [&#xd;
        {&#xd;
            &quot;payeeIdentity&quot;: &quot;27713803912&quot;,&#xd;
            &quot;paymentModality&quot;: &quot;01&quot;,&#xd;
            &quot;financialAddress&quot;: &quot;589&quot;,&#xd;
            &quot;bankingInstitutionCode&quot;: &quot;gorilla&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="X-CallbackURL" elementType="Header">
                    <stringProp name="Header.name">X-CallbackURL</stringProp>
                    <stringProp name="Header.value">http://example.com/callback</stringProp>
                  </elementProp>
                  <elementProp name="X-Registering-Institution-ID" elementType="Header">
                    <stringProp name="Header.name">X-Registering-Institution-ID</stringProp>
                    <stringProp name="Header.value">my-institution-id</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">6da444f6-3597-4849-92ac-592dd84567b4</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Batch Account Lookup" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Batch Account Lookup-12" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">identity-mapper.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/beneficiary</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;requestID&quot;: &quot;915251236706&quot;,&#xd;
    &quot;beneficiaries&quot;: [&#xd;
        {&#xd;
            &quot;payeeIdentity&quot;: &quot;27713803912&quot;,&#xd;
            &quot;paymentModality&quot;: &quot;01&quot;,&#xd;
            &quot;financialAddress&quot;: &quot;589&quot;,&#xd;
            &quot;bankingInstitutionCode&quot;: &quot;gorilla&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="X-CallbackURL" elementType="Header">
                    <stringProp name="Header.name">X-CallbackURL</stringProp>
                    <stringProp name="Header.value">http://example.com/callback</stringProp>
                  </elementProp>
                  <elementProp name="X-Registering-Institution-ID" elementType="Header">
                    <stringProp name="Header.name">X-Registering-Institution-ID</stringProp>
                    <stringProp name="Header.value">my-institution-id</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">25a27ddf-93ec-4b58-9264-7d85f6b05bc4</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Account Lookup" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Account Lookup-13" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">identity-mapper.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/beneficiary</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;requestID&quot;: &quot;915251236706&quot;,&#xd;
    &quot;beneficiaries&quot;: [&#xd;
        {&#xd;
            &quot;payeeIdentity&quot;: &quot;27713803912&quot;,&#xd;
            &quot;paymentModality&quot;: &quot;01&quot;,&#xd;
            &quot;financialAddress&quot;: &quot;589&quot;,&#xd;
            &quot;bankingInstitutionCode&quot;: &quot;gorilla&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="X-CallbackURL" elementType="Header">
                    <stringProp name="Header.name">X-CallbackURL</stringProp>
                    <stringProp name="Header.value">http://example.com/callback</stringProp>
                  </elementProp>
                  <elementProp name="X-Registering-Institution-ID" elementType="Header">
                    <stringProp name="Header.name">X-Registering-Institution-ID</stringProp>
                    <stringProp name="Header.value">my-institution-id</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">dea3357f-fbc1-4d72-a1c0-f6d06b00d0b6</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Fetch All Beneficiaries" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Fetch All Beneficiaries-14" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">identity-mapper.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/beneficiary</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;requestID&quot;: &quot;915251236706&quot;,&#xd;
    &quot;beneficiaries&quot;: [&#xd;
        {&#xd;
            &quot;payeeIdentity&quot;: &quot;27713803912&quot;,&#xd;
            &quot;paymentModality&quot;: &quot;01&quot;,&#xd;
            &quot;financialAddress&quot;: &quot;589&quot;,&#xd;
            &quot;bankingInstitutionCode&quot;: &quot;gorilla&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="X-CallbackURL" elementType="Header">
                    <stringProp name="Header.name">X-CallbackURL</stringProp>
                    <stringProp name="Header.value">http://example.com/callback</stringProp>
                  </elementProp>
                  <elementProp name="X-Registering-Institution-ID" elementType="Header">
                    <stringProp name="Header.name">X-Registering-Institution-ID</stringProp>
                    <stringProp name="Header.value">my-institution-id</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">759f09f6-5c80-4add-9ece-4f4d53f11059</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Fetch Beneficiaries" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Fetch Beneficiaries-15" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">identity-mapper.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/beneficiary</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;requestID&quot;: &quot;915251236706&quot;,&#xd;
    &quot;beneficiaries&quot;: [&#xd;
        {&#xd;
            &quot;payeeIdentity&quot;: &quot;27713803912&quot;,&#xd;
            &quot;paymentModality&quot;: &quot;01&quot;,&#xd;
            &quot;financialAddress&quot;: &quot;589&quot;,&#xd;
            &quot;bankingInstitutionCode&quot;: &quot;gorilla&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="X-CallbackURL" elementType="Header">
                    <stringProp name="Header.name">X-CallbackURL</stringProp>
                    <stringProp name="Header.value">http://example.com/callback</stringProp>
                  </elementProp>
                  <elementProp name="X-Registering-Institution-ID" elementType="Header">
                    <stringProp name="Header.name">X-Registering-Institution-ID</stringProp>
                    <stringProp name="Header.value">my-institution-id</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">c060b047-50a0-495f-8f15-b3fc606d7843</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Add Payment Modality" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add Payment Modality-16" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">identity-mapper.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/beneficiary</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;requestID&quot;: &quot;915251236706&quot;,&#xd;
    &quot;beneficiaries&quot;: [&#xd;
        {&#xd;
            &quot;payeeIdentity&quot;: &quot;27713803912&quot;,&#xd;
            &quot;paymentModality&quot;: &quot;01&quot;,&#xd;
            &quot;financialAddress&quot;: &quot;589&quot;,&#xd;
            &quot;bankingInstitutionCode&quot;: &quot;gorilla&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="X-CallbackURL" elementType="Header">
                    <stringProp name="Header.name">X-CallbackURL</stringProp>
                    <stringProp name="Header.value">http://example.com/callback</stringProp>
                  </elementProp>
                  <elementProp name="X-Registering-Institution-ID" elementType="Header">
                    <stringProp name="Header.name">X-Registering-Institution-ID</stringProp>
                    <stringProp name="Header.value">my-institution-id</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">17d53ec5-4864-40e3-810d-bd51bbcea096</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Update Payment Modality" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update Payment Modality-17" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">identity-mapper.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/beneficiary</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;requestID&quot;: &quot;915251236706&quot;,&#xd;
    &quot;beneficiaries&quot;: [&#xd;
        {&#xd;
            &quot;payeeIdentity&quot;: &quot;27713803912&quot;,&#xd;
            &quot;paymentModality&quot;: &quot;01&quot;,&#xd;
            &quot;financialAddress&quot;: &quot;589&quot;,&#xd;
            &quot;bankingInstitutionCode&quot;: &quot;gorilla&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="X-CallbackURL" elementType="Header">
                    <stringProp name="Header.name">X-CallbackURL</stringProp>
                    <stringProp name="Header.value">http://example.com/callback</stringProp>
                  </elementProp>
                  <elementProp name="X-Registering-Institution-ID" elementType="Header">
                    <stringProp name="Header.name">X-Registering-Institution-ID</stringProp>
                    <stringProp name="Header.value">my-institution-id</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">9e178b8f-a1d4-45a4-8ef7-49f2c707dc71</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Voucher Management">
        <intProp name="ThreadGroup.num_threads">10</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <RecordingController guiclass="RecordController" testclass="RecordingController" testname="Recording Controller" enabled="true"/>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Create Vouchers" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Create Vouchers-18" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">vouchers.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/vouchers</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;requestID&quot;: &quot;849324499155&quot;,&#xd;
    &quot;batchID&quot;: &quot;045155518258&quot;,&#xd;
    &quot;voucherInstructions&quot;: [&#xd;
        {&#xd;
            &quot;instructionID&quot;: &quot;1202383344325434&quot;,&#xd;
            &quot;groupCode&quot;: &quot;021&quot;,&#xd;
            &quot;currency&quot;: &quot;USD&quot;,&#xd;
            &quot;amount&quot;: 5009,&#xd;
            &quot;payeeFunctionalID&quot;: &quot;63310590322288932633&quot;,&#xd;
            &quot;narration&quot;: &quot;Social Support Payment for the Month of Jan&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="X-CallbackURL" elementType="Header">
                    <stringProp name="Header.name">X-CallbackURL</stringProp>
                    <stringProp name="Header.value">http://example.com/callback</stringProp>
                  </elementProp>
                  <elementProp name="X-Registering-Institution-ID" elementType="Header">
                    <stringProp name="Header.name">X-Registering-Institution-ID</stringProp>
                    <stringProp name="Header.value">my-institution-id</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">84d31ab8-9641-4727-a243-9f0dff3c32cc</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Activate Vouchers" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Activate Vouchers-19" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">vouchers.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/vouchers?command=activate</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;requestID&quot;: &quot;849324499155&quot;,&#xd;
    &quot;batchID&quot;: &quot;045155518258&quot;,&#xd;
    &quot;voucherInstructions&quot;: [&#xd;
        {&#xd;
            &quot;serialNumber&quot;: &quot;16939790248654&quot;,&#xd;
            &quot;status&quot;: &quot;02&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="X-CallbackURL" elementType="Header">
                    <stringProp name="Header.name">X-CallbackURL</stringProp>
                    <stringProp name="Header.value">http://example.com/callback</stringProp>
                  </elementProp>
                  <elementProp name="X-Registering-Institution-ID" elementType="Header">
                    <stringProp name="Header.name">X-Registering-Institution-ID</stringProp>
                    <stringProp name="Header.value">my-institution-id</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">b833cfad-dca2-457c-8f80-bf76f3d7e1de</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Suspend Vouchers" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Suspend Vouchers-21" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">vouchers.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/vouchers?command=suspend</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;requestID&quot;: &quot;849324499155&quot;,&#xd;
    &quot;batchID&quot;: &quot;045155518258&quot;,&#xd;
    &quot;voucherInstructions&quot;: [&#xd;
        {&#xd;
            &quot;serialNumber&quot;: &quot;16895906640276&quot;,&#xd;
            &quot;status&quot;: &quot;06&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="X-CallbackURL" elementType="Header">
                    <stringProp name="Header.name">X-CallbackURL</stringProp>
                    <stringProp name="Header.value">http://example.com/callback</stringProp>
                  </elementProp>
                  <elementProp name="X-Registering-Institution-ID" elementType="Header">
                    <stringProp name="Header.name">X-Registering-Institution-ID</stringProp>
                    <stringProp name="Header.value">my-institution-id</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">86fc3b3b-6b2a-44fc-bfe3-c5a8bdf2c413</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Cancel Vouchers" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Cancel Vouchers-25" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">vouchers.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/vouchers?command=cancel</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;requestID&quot;: &quot;849324499155&quot;,&#xd;
    &quot;batchID&quot;: &quot;045155518258&quot;,&#xd;
    &quot;voucherInstructions&quot;: [&#xd;
        {&#xd;
            &quot;serialNumber&quot;: &quot;16895845478866&quot;,&#xd;
            &quot;status&quot;: &quot;03&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="X-CallbackURL" elementType="Header">
                    <stringProp name="Header.name">X-CallbackURL</stringProp>
                    <stringProp name="Header.value">http://example.com/callback</stringProp>
                  </elementProp>
                  <elementProp name="X-Registering-Institution-ID" elementType="Header">
                    <stringProp name="Header.name">X-Registering-Institution-ID</stringProp>
                    <stringProp name="Header.value">my-institution-id</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">aec32a1a-6b75-4115-892a-b4e8b38c8e2e</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Reactivate Vouchers" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Reactivate Vouchers-24" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">vouchers.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/vouchers?command=reactivate</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;requestID&quot;: &quot;849324499155&quot;,&#xd;
    &quot;batchID&quot;: &quot;045155518258&quot;,&#xd;
    &quot;voucherInstructions&quot;: [&#xd;
        {&#xd;
            &quot;serialNumber&quot;: &quot;16895906640276&quot;,&#xd;
            &quot;status&quot;: &quot;02&quot;&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="X-CallbackURL" elementType="Header">
                    <stringProp name="Header.name">X-CallbackURL</stringProp>
                    <stringProp name="Header.value">http://example.com/callback</stringProp>
                  </elementProp>
                  <elementProp name="X-Registering-Institution-ID" elementType="Header">
                    <stringProp name="Header.name">X-Registering-Institution-ID</stringProp>
                    <stringProp name="Header.value">my-institution-id</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">e87d4847-bcba-488d-a1fd-5dee215e064b</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Redeem Vouchers" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Redeem Vouchers-22" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">vouchers.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/vouchers?command=redeem</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;requestId&quot;: &quot;849324499155&quot;,&#xd;
  &quot;agentId&quot;: &quot;1234567890&quot;,&#xd;
  &quot;voucherSecretNumber&quot;: &quot;168959066402710531&quot;&#xd;
 }&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="X-CallbackURL" elementType="Header">
                    <stringProp name="Header.name">X-CallbackURL</stringProp>
                    <stringProp name="Header.value">http://example.com/callback</stringProp>
                  </elementProp>
                  <elementProp name="X-Registering-Institution-ID" elementType="Header">
                    <stringProp name="Header.name">X-Registering-Institution-ID</stringProp>
                    <stringProp name="Header.value">my-institution-id</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">4443f85b-f8b1-4128-af54-e1837cc194b1</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Redeem and Pay Vouchers" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Redeem and Pay Vouchers-26" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">vouchers.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/vouchers?command=redeemPay</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;requestId&quot;: &quot;849324499155&quot;,&#xd;
  &quot;agentId&quot;: &quot;1234567890&quot;,&#xd;
  &quot;voucherSecretNumber&quot;: &quot;168975377470710722&quot;&#xd;
 }&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="X-CallbackURL" elementType="Header">
                    <stringProp name="Header.name">X-CallbackURL</stringProp>
                    <stringProp name="Header.value">http://example.com/callback</stringProp>
                  </elementProp>
                  <elementProp name="X-Registering-Institution-ID" elementType="Header">
                    <stringProp name="Header.name">X-Registering-Institution-ID</stringProp>
                    <stringProp name="Header.value">my-institution-id</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">5f0ac987-5dc6-4a4c-b467-c0ba7b1df9f9</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Check Validity" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Check Validity-27" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">vouchers.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/voucher/validity</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="isValid" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">isValid</stringProp>
                    <stringProp name="Argument.value">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="serialNumber" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">serialNumber</stringProp>
                    <stringProp name="Argument.value">16939790248654</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="X-CallbackURL" elementType="Header">
                    <stringProp name="Header.name">X-CallbackURL</stringProp>
                    <stringProp name="Header.value">http://example.com/callback</stringProp>
                  </elementProp>
                  <elementProp name="X-Registering-Institution-ID" elementType="Header">
                    <stringProp name="Header.name">X-Registering-Institution-ID</stringProp>
                    <stringProp name="Header.value">my-institution-id</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">a3e64bb0-40ed-49cb-98f9-00256b5b3d5b</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Fetch Vouchers" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Fetch Vouchers-29" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">vouchers.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/vouchers/%7B%7BvoucherNumber%7D%7D</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="X-Registering-Institution-ID" elementType="Header">
                    <stringProp name="Header.name">X-Registering-Institution-ID</stringProp>
                    <stringProp name="Header.value">my-institution-id</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">802397c2-1287-4a97-bcd2-c3806bd4abbf</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Fetch All Vouchers" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Fetch All Vouchers-31" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">vouchers.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/vouchers</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="page" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">page</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="size" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">size</stringProp>
                    <stringProp name="Argument.value">10</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="X-Registering-Institution-ID" elementType="Header">
                    <stringProp name="Header.name">X-Registering-Institution-ID</stringProp>
                    <stringProp name="Header.value">my-institution-id</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">d5292fec-6a5b-41e7-af16-cf61c074a725</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.40.0</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname=" Bill Pay APIs" enabled="false">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <RecordingController guiclass="RecordController" testclass="RecordingController" testname="Recording Controller" enabled="true"/>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Bill enquiry API" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Bill enquiry API-17" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">bill-pay.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/bills/%7B%7BbillId%7D%7D</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="X-CallbackURL" elementType="Header">
                    <stringProp name="Header.name">X-CallbackURL</stringProp>
                    <stringProp name="Header.value">http://example.com/callback</stringProp>
                  </elementProp>
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">rhino</stringProp>
                  </elementProp>
                  <elementProp name="X-CorrelationID" elementType="Header">
                    <stringProp name="Header.name">X-CorrelationID</stringProp>
                    <stringProp name="Header.value">1234</stringProp>
                  </elementProp>
                  <elementProp name="Payer-FSP-Id" elementType="Header">
                    <stringProp name="Header.name">Payer-FSP-Id</stringProp>
                    <stringProp name="Header.value">{{PayeeTenantName}}</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">d11c1ee1-03ca-4b05-b26e-5be628050984</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.41.2</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Bill enquiry API-18" enabled="false">
              <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
              <stringProp name="HTTPSampler.domain">bill-pay.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/bills/%7B%7BbillId%7D%7D</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://bill-pay.local/bills/%7B%7BbillId%7D%7D</stringProp>
                  </elementProp>
                  <elementProp name="X-CallbackURL" elementType="Header">
                    <stringProp name="Header.name">X-CallbackURL</stringProp>
                    <stringProp name="Header.value">http://example.com/callback</stringProp>
                  </elementProp>
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">rhino</stringProp>
                  </elementProp>
                  <elementProp name="X-CorrelationID" elementType="Header">
                    <stringProp name="Header.name">X-CorrelationID</stringProp>
                    <stringProp name="Header.value">1234</stringProp>
                  </elementProp>
                  <elementProp name="Payer-FSP-Id" elementType="Header">
                    <stringProp name="Header.name">Payer-FSP-Id</stringProp>
                    <stringProp name="Header.value">{{PayeeTenantName}}</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">d11c1ee1-03ca-4b05-b26e-5be628050984</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.41.2</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Bill Payment API" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Bill Payment API-19" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">bill-pay.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/paymentNotifications</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;billInquiryRequestId&quot;: &quot;12e2cedc-73&quot;,&#xd;
    &quot;billId&quot;: &quot;001&quot;,&#xd;
    &quot;paymentReferenceID&quot;: &quot;8f353842-451c-4&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="X-CallbackURL" elementType="Header">
                    <stringProp name="Header.name">X-CallbackURL</stringProp>
                    <stringProp name="Header.value">http://example.com/callback</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">d7291560-e0cb-4049-b3d1-af067129a133</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="X-CorrelationID" elementType="Header">
                    <stringProp name="Header.name">X-CorrelationID</stringProp>
                    <stringProp name="Header.value">1234</stringProp>
                  </elementProp>
                  <elementProp name="X-Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">X-Platform-TenantId</stringProp>
                    <stringProp name="Header.value">rhino</stringProp>
                  </elementProp>
                  <elementProp name="X-PayerFSP-Id" elementType="Header">
                    <stringProp name="Header.name">X-PayerFSP-Id</stringProp>
                    <stringProp name="Header.value">{{PayeeTenantName}}</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.41.2</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Bill Payment API-20" enabled="false">
              <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
              <stringProp name="HTTPSampler.domain">bill-pay.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/paymentNotifications</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;billInquiryRequestId&quot;: &quot;12e2cedc-73&quot;,&#xd;
    &quot;billId&quot;: &quot;001&quot;,&#xd;
    &quot;paymentReferenceID&quot;: &quot;8f353842-451c-4&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://bill-pay.local/paymentNotifications</stringProp>
                  </elementProp>
                  <elementProp name="X-CallbackURL" elementType="Header">
                    <stringProp name="Header.name">X-CallbackURL</stringProp>
                    <stringProp name="Header.value">http://example.com/callback</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">d7291560-e0cb-4049-b3d1-af067129a133</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="X-CorrelationID" elementType="Header">
                    <stringProp name="Header.name">X-CorrelationID</stringProp>
                    <stringProp name="Header.value">1234</stringProp>
                  </elementProp>
                  <elementProp name="X-Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">X-Platform-TenantId</stringProp>
                    <stringProp name="Header.value">rhino</stringProp>
                  </elementProp>
                  <elementProp name="X-PayerFSP-Id" elementType="Header">
                    <stringProp name="Header.name">X-PayerFSP-Id</stringProp>
                    <stringProp name="Header.value">{{PayeeTenantName}}</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.41.2</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Biller RTP Request API" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Biller RTP Request API-21" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">bill-pay.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/billTransferRequests</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;clientCorrelationId&quot;: &quot;123445&quot;,&#xd;
  &quot;billID&quot;: &quot;12345&quot;,&#xd;
  &quot;requestType&quot;: &quot;00&quot;,&#xd;
  &quot;payerFspDetails&quot;: {&#xd;
    &quot;payerFSPID&quot;: &quot;lion&quot;,&#xd;
    &quot;financialAddress&quot;: &quot;1223455&quot;&#xd;
  },&#xd;
  &quot;alias&quot;: null,&#xd;
  &quot;billDetails&quot;: {&#xd;
    &quot;billerName&quot;: &quot;Test&quot;,&#xd;
    &quot;amount&quot;: 100.0&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="X-Biller-Id" elementType="Header">
                    <stringProp name="Header.name">X-Biller-Id</stringProp>
                    <stringProp name="Header.value">GovBill</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">4d3ce05e-5778-4cdf-947b-e2d86bfa2581</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="X-Callback-URL" elementType="Header">
                    <stringProp name="Header.name">X-Callback-URL</stringProp>
                    <stringProp name="Header.value">http://example.com/callback</stringProp>
                  </elementProp>
                  <elementProp name="X-Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">X-Platform-TenantId</stringProp>
                    <stringProp name="Header.value">rhino</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="X-Client-Correlation-ID" elementType="Header">
                    <stringProp name="Header.name">X-Client-Correlation-ID</stringProp>
                    <stringProp name="Header.value">12345</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.41.2</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Biller RTP Request API-22" enabled="false">
              <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
              <stringProp name="HTTPSampler.domain">bill-pay.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/billTransferRequests</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;clientCorrelationId&quot;: &quot;123445&quot;,&#xd;
  &quot;billID&quot;: &quot;12345&quot;,&#xd;
  &quot;requestType&quot;: &quot;00&quot;,&#xd;
  &quot;payerFspDetails&quot;: {&#xd;
    &quot;payerFSPID&quot;: &quot;lion&quot;,&#xd;
    &quot;financialAddress&quot;: &quot;1223455&quot;&#xd;
  },&#xd;
  &quot;alias&quot;: null,&#xd;
  &quot;billDetails&quot;: {&#xd;
    &quot;billerName&quot;: &quot;Test&quot;,&#xd;
    &quot;amount&quot;: 100.0&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://bill-pay.local/billTransferRequests</stringProp>
                  </elementProp>
                  <elementProp name="X-Biller-Id" elementType="Header">
                    <stringProp name="Header.name">X-Biller-Id</stringProp>
                    <stringProp name="Header.value">GovBill</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">4d3ce05e-5778-4cdf-947b-e2d86bfa2581</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="X-Callback-URL" elementType="Header">
                    <stringProp name="Header.name">X-Callback-URL</stringProp>
                    <stringProp name="Header.value">http://example.com/callback</stringProp>
                  </elementProp>
                  <elementProp name="X-Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">X-Platform-TenantId</stringProp>
                    <stringProp name="Header.value">rhino</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="X-Client-Correlation-ID" elementType="Header">
                    <stringProp name="Header.name">X-Client-Correlation-ID</stringProp>
                    <stringProp name="Header.value">12345</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.41.2</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Mock API- Payer RTP Response API" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Mock API- Payer RTP Response API-23" enabled="true">
              <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
              <stringProp name="HTTPSampler.domain">bill-pay.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/billTransferRequests</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;clientCorrelationId&quot;: &quot;123445&quot;,&#xd;
  &quot;billId&quot;: &quot;12345&quot;,&#xd;
  &quot;requestType&quot;: &quot;00&quot;,&#xd;
  &quot;payerFspDetail&quot;: {&#xd;
    &quot;payerFspId&quot;: &quot;lion&quot;,&#xd;
    &quot;financialAddress&quot;: &quot;1223455&quot;&#xd;
  },&#xd;
  &quot;alias&quot;: null,&#xd;
  &quot;bill&quot;: {&#xd;
    &quot;billerName&quot;: &quot;Test&quot;,&#xd;
    &quot;amount&quot;: 100.0&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="X-Biller-Id" elementType="Header">
                    <stringProp name="Header.name">X-Biller-Id</stringProp>
                    <stringProp name="Header.value">GovBill</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">014e4c9f-b6ed-4b3e-960a-95624ec34cb8</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="X-Callback-URL" elementType="Header">
                    <stringProp name="Header.name">X-Callback-URL</stringProp>
                    <stringProp name="Header.value">http://example.com/callback</stringProp>
                  </elementProp>
                  <elementProp name="X-Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">X-Platform-TenantId</stringProp>
                    <stringProp name="Header.value">rhino</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="X-Client-Correlation-ID" elementType="Header">
                    <stringProp name="Header.name">X-Client-Correlation-ID</stringProp>
                    <stringProp name="Header.value">12345</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.41.2</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Mock API- Payer RTP Response API-24" enabled="false">
              <stringProp name="TestPlan.comments">Detected a redirect from the previous sample</stringProp>
              <stringProp name="HTTPSampler.domain">bill-pay.local</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/billTransferRequests</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">PUT</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
  &quot;clientCorrelationId&quot;: &quot;123445&quot;,&#xd;
  &quot;billId&quot;: &quot;12345&quot;,&#xd;
  &quot;requestType&quot;: &quot;00&quot;,&#xd;
  &quot;payerFspDetail&quot;: {&#xd;
    &quot;payerFspId&quot;: &quot;lion&quot;,&#xd;
    &quot;financialAddress&quot;: &quot;1223455&quot;&#xd;
  },&#xd;
  &quot;alias&quot;: null,&#xd;
  &quot;bill&quot;: {&#xd;
    &quot;billerName&quot;: &quot;Test&quot;,&#xd;
    &quot;amount&quot;: 100.0&#xd;
  }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://bill-pay.local/billTransferRequests</stringProp>
                  </elementProp>
                  <elementProp name="X-Biller-Id" elementType="Header">
                    <stringProp name="Header.name">X-Biller-Id</stringProp>
                    <stringProp name="Header.value">GovBill</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">014e4c9f-b6ed-4b3e-960a-95624ec34cb8</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="X-Callback-URL" elementType="Header">
                    <stringProp name="Header.name">X-Callback-URL</stringProp>
                    <stringProp name="Header.value">http://example.com/callback</stringProp>
                  </elementProp>
                  <elementProp name="X-Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">X-Platform-TenantId</stringProp>
                    <stringProp name="Header.value">rhino</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="X-Client-Correlation-ID" elementType="Header">
                    <stringProp name="Header.name">X-Client-Correlation-ID</stringProp>
                    <stringProp name="Header.value">12345</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.41.2</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Mock API(Connector-Bulk)- Payer RTP Response API" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Mock API(Connector-Bulk)- Payer RTP Response API-25" enabled="true">
              <stringProp name="HTTPSampler.domain">{{connectorbulkhostname}}</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/billTransferRequests</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="X-Biller-Id" elementType="Header">
                    <stringProp name="Header.name">X-Biller-Id</stringProp>
                    <stringProp name="Header.value">GovBill</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">b6eb5106-68fe-41b9-895b-1b63ab8bf2c2</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="X-Callback-URL" elementType="Header">
                    <stringProp name="Header.name">X-Callback-URL</stringProp>
                    <stringProp name="Header.value">http://example.com/callback</stringProp>
                  </elementProp>
                  <elementProp name="X-Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">X-Platform-TenantId</stringProp>
                    <stringProp name="Header.value">rhino</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="X-Client-Correlation-ID" elementType="Header">
                    <stringProp name="Header.name">X-Client-Correlation-ID</stringProp>
                    <stringProp name="Header.value">12345</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.41.2</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Mock API(Connector-CRM)- Bill Inquiry API" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Mock API(Connector-CRM)- Bill Inquiry API-26" enabled="true">
              <stringProp name="HTTPSampler.domain">{{connectorcrmhostname}}</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/bills/%7B%7BbillId%7D%7D</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="X-CallbackURL" elementType="Header">
                    <stringProp name="Header.name">X-CallbackURL</stringProp>
                    <stringProp name="Header.value">http://example.com/callback</stringProp>
                  </elementProp>
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">rhino</stringProp>
                  </elementProp>
                  <elementProp name="X-CorrelationID" elementType="Header">
                    <stringProp name="Header.name">X-CorrelationID</stringProp>
                    <stringProp name="Header.value">f56caf0b-377d-4a1f-8ac1-715859a83eee</stringProp>
                  </elementProp>
                  <elementProp name="X-PayerFSP-Id" elementType="Header">
                    <stringProp name="Header.name">X-PayerFSP-Id</stringProp>
                    <stringProp name="Header.value">{{PayeeTenantName}}</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">fc7b0904-7996-440f-b5ad-eda42909168c</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.41.2</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Mock API(Connector-CRM)- Bill Payments API" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Mock API(Connector-CRM)- Bill Payments API-27" enabled="true">
              <stringProp name="HTTPSampler.domain">{{connectorcrmhostname}}</stringProp>
              <stringProp name="HTTPSampler.port">0</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/paymentNotifications</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;billInquiryRequestId&quot;: &quot;12e2cedc-7372-4208-8079-7d46d691fca4&quot;,&#xd;
    &quot;billId&quot;: &quot;001&quot;,&#xd;
    &quot;paymentReferenceID&quot;: &quot;8f353842-451c-4231-afc9-58289afdc396&quot;&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Platform-TenantId" elementType="Header">
                    <stringProp name="Header.name">Platform-TenantId</stringProp>
                    <stringProp name="Header.value">rhino</stringProp>
                  </elementProp>
                  <elementProp name="X-CorrelationID" elementType="Header">
                    <stringProp name="Header.name">X-CorrelationID</stringProp>
                    <stringProp name="Header.value">f56caf0b-377d-4a1f-8ac1-715859a83eee</stringProp>
                  </elementProp>
                  <elementProp name="X-PayerFSP-Id" elementType="Header">
                    <stringProp name="Header.name">X-PayerFSP-Id</stringProp>
                    <stringProp name="Header.value">{{PayeeTenantName}}</stringProp>
                  </elementProp>
                  <elementProp name="Postman-Token" elementType="Header">
                    <stringProp name="Header.name">Postman-Token</stringProp>
                    <stringProp name="Header.value">60d73540-20c7-4772-9808-8ec68e255e99</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">PostmanRuntime/7.41.2</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>true</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <hostname>true</hostname>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="RespTimeGraphVisualizer" testclass="ResultCollector" testname="Response Time Graph">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">/home/res</stringProp>
        <boolProp name="RespTimeGraph.seriesselection">true</boolProp>
        <intProp name="RespTimeGraph.graphtitlefondsize">11</intProp>
        <intProp name="RespTimeGraph.lineshapepoint">1</intProp>
        <boolProp name="RespTimeGraph.graphsizedynamic">false</boolProp>
        <intProp name="RespTimeGraph.legendplacement">1</intProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatGraphVisualizer" testclass="ResultCollector" testname="Aggregate Graph">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ProxyControl guiclass="ProxyControlGui" testclass="ProxyControl" testname="HTTP(S) Test Script Recorder" enabled="true">
        <stringProp name="ProxyControlGui.port">8889</stringProp>
        <collectionProp name="ProxyControlGui.exclude_list">
          <stringProp name="1179605444">(?i).*\.(bmp|css|js|gif|ico|jpe?g|png|swf|eot|otf|ttf|mp4|woff|woff2)</stringProp>
          <stringProp name="-88591710">www\.download\.windowsupdate\.com.*</stringProp>
          <stringProp name="1323576868">toolbarqueries\.google\..*</stringProp>
          <stringProp name="1629558731">clients.*\.google.*</stringProp>
          <stringProp name="-1899150273">api\.bing\.com.*</stringProp>
          <stringProp name="305776760">(?i).*\.(bmp|css|js|gif|ico|jpe?g|png|swf|eot|otf|ttf|mp4|woff|woff2)[\?;].*</stringProp>
          <stringProp name="1779943373">us\.update\.toolbar\.yahoo\.com.*</stringProp>
          <stringProp name="1815174768">safebrowsing.*\.google\.com.*</stringProp>
          <stringProp name="587935979">g\.msn.*</stringProp>
          <stringProp name="110431874">.*msg\.yahoo\.com.*</stringProp>
          <stringProp name="1206954446">tiles.*\.mozilla\.com.*</stringProp>
          <stringProp name="-1314416226">sqm\.microsoft\.com.*</stringProp>
          <stringProp name="1726898318">geo\.yahoo\.com.*</stringProp>
          <stringProp name="-192420923">.*yimg\.com.*</stringProp>
          <stringProp name="2118375536">www\.google-analytics\.com.*</stringProp>
          <stringProp name="1739087931">http?://self-repair\.mozilla\.org.*</stringProp>
          <stringProp name="805311387">windowsupdate\.microsoft\.com.*</stringProp>
          <stringProp name="-1424663473">.*detectportal\.firefox\.com.*</stringProp>
          <stringProp name="11072252">.*toolbar\.yahoo\.com.*</stringProp>
          <stringProp name="-190610036">.*\.google\.com.*/safebrowsing/.*</stringProp>
          <stringProp name="-958112859">toolbar\.google\.com.*</stringProp>
          <stringProp name="-1279148329">pgq\.yahoo\.com.*</stringProp>
          <stringProp name="-1435252351">toolbar\.avg\.com/.*</stringProp>
          <stringProp name="-576820688">toolbar\.msn\.com.*</stringProp>
        </collectionProp>
        <collectionProp name="ProxyControlGui.include_list"/>
        <boolProp name="ProxyControlGui.capture_http_headers">true</boolProp>
        <intProp name="ProxyControlGui.grouping_mode">4</intProp>
        <boolProp name="ProxyControlGui.add_assertion">false</boolProp>
        <stringProp name="ProxyControlGui.sampler_type_name"></stringProp>
        <boolProp name="ProxyControlGui.sampler_redirect_automatically">false</boolProp>
        <boolProp name="ProxyControlGui.sampler_follow_redirects">true</boolProp>
        <boolProp name="ProxyControlGui.use_keepalive">true</boolProp>
        <boolProp name="ProxyControlGui.sampler_download_images">false</boolProp>
        <boolProp name="ProxyControlGui.regex_match">true</boolProp>
        <stringProp name="ProxyControlGui.content_type_include"></stringProp>
        <stringProp name="ProxyControlGui.content_type_exclude"></stringProp>
        <boolProp name="ProxyControlGui.notify_child_sl_filtered">false</boolProp>
        <stringProp name="ProxyControlGui.proxy_prefix_http_sampler_name">GSMA Stub- Request</stringProp>
        <intProp name="ProxyControlGui.proxy_http_sampler_naming_mode">1</intProp>
        <stringProp name="ProxyControlGui.proxy_pause_http_sampler"></stringProp>
        <boolProp name="ProxyControlGui.detect_graphql_request">true</boolProp>
        <stringProp name="ProxyControlGui.default_encoding">UTF-8</stringProp>
      </ProxyControl>
      <hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>true</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>true</responseData>
              <samplerData>true</samplerData>
              <xml>true</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>true</responseHeaders>
              <requestHeaders>true</requestHeaders>
              <responseDataOnError>true</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <url>true</url>
              <fileName>true</fileName>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">recording.xml</stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
